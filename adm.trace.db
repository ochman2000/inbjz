02-01 22:20:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update adm.tasks set type='QUERY' where type='Q'; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseImpl.executeQuery(DatabaseImpl.java:74)
	at pl.lodz.p.components.service.QueryService.select(QueryService.java:41)
	at pl.lodz.p.components.service.QueryService$$FastClassBySpringCGLIB$$9ce6e2bd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.QueryService$$EnhancerBySpringCGLIB$$b98ca734.select(<generated>)
	at pl.lodz.p.components.contoller.QueryController.executeQuery(QueryController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:06:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CRATE[*] TABLE STUDENTS (
	ID INT NOT NULL,
	FIRST_NAME VARCHAR (100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT SYSDATE
); "; expected "COMMIT, CREATE, CALL, CHECKPOINT, COMMENT, {"; SQL statement:
crate table students (
	id INT NOT NULL,
	first_name VARCHAR (100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate
); [42001-182]
02-02 00:06:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR (100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:07:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);
--CREATE UNIQUE INDEX IDX_STUDENTS_SECTION_NUMBER ON students (section, number); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:07:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
--ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);
CREATE UNIQUE INDEX IDX_STUDENTS_SECTION_NUMBER ON students (section, number); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:07:13 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Column "SECTION" not found; SQL statement:
--ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);
CREATE UNIQUE INDEX IDX_STUDENTS_SECTION_NUMBER ON students (section, number); [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:636)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:74)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:93)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:96)
	at pl.lodz.p.components.service.DbService.update(DbService.java:162)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:08:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table tasks (
 id INT NOT NULL
 , section INT NOT NULL
 , number INT NOT NULL
 , question VARCHAR (2000)
 , answer VARCHAR (2000)
 , type VARCHAR (10)
 , author VARCHAR (100)
 , date_created DATETIME default sysdate
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:08:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:08:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON students (section, number); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:08:30 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Column "SECTION" not found; SQL statement:
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON students (section, number); [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:636)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:74)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:93)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:96)
	at pl.lodz.p.components.service.DbService.update(DbService.java:162)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:08:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:09:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table logs(
	id    INT NOT NULL
    , student_id INT
	, session_ID VARCHAR(100)
	, client_id VARCHAR(20)
	, task_id INT
	, answer VARCHAR(2000)
	, correct VARCHAR(5)
	, log_date DATETIME default sysdate
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:09:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:09:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:09:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:10:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create user student password 'abc'; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:10:07 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: User "STUDENT" already exists; SQL statement:
create user student password 'abc'; [90033-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateUser.update(CreateUser.java:69)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:96)
	at pl.lodz.p.components.service.DbService.update(DbService.java:162)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:10:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
REVOKE Insert on students from STUDENT;
REVOKE update on students from STUDENT;
REVOKE delete on students from STUDENT;

REVOKE Insert on tasks from STUDENT;
REVOKE update on tasks from STUDENT;
REVOKE delete on tasks from STUDENT;
REVOKE Insert on logs from STUDENT;
REVOKE update on logs from STUDENT;
REVOKE delete on logs from STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:13:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
grant select on students to STUDENT;
--select * from information_schema.rights;
--select * from information_schema.COLUMN_PRIVILEGES;
--select * from INFORMATION_SCHEMA.TABLE_PRIVILEGES;
--select * from INFORMATION_SCHEMA.USERS; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:13:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
grant select on tasks to STUDENT;
--select * from information_schema.rights;
--select * from information_schema.COLUMN_PRIVILEGES;
--select * from INFORMATION_SCHEMA.TABLE_PRIVILEGES;
--select * from INFORMATION_SCHEMA.USERS; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:13:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
grant select on logs to STUDENT;
--select * from information_schema.rights;
--select * from information_schema.COLUMN_PRIVILEGES;
--select * from INFORMATION_SCHEMA.TABLE_PRIVILEGES;
--select * from INFORMATION_SCHEMA.USERS; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:21:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks direct select * from tasks [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:22:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
insert into tasks values (select id, section, number, question, answer, type, author, date_created from adm.tasks); [21002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:265)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:22:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS (SELECT ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES[*] (SELECT ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED FROM ADM.TASKS); "; SQL statement:
insert into tasks (select id, section, number, question, answer, type, author, date_created) values (select id, section, number, question, answer, type, author, date_created from adm.tasks); [42000-182]
02-02 00:23:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
insert into tasks (id, section, number, question, answer, type, author, date_created) values (select id, section, number, question, answer, type, author, date_created from adm.tasks); [21002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:265)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:23:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS ID[*], SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED VALUES (SELECT ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED FROM ADM.TASKS); "; expected "., (, DIRECT, SORTED, DEFAULT, VALUES, SET, (, SELECT, FROM"; SQL statement:
insert into tasks id, section, number, question, answer, type, author, date_created values (select id, section, number, question, answer, type, author, date_created from adm.tasks); [42001-182]
02-02 00:24:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks (id) values (select id from adm.tasks); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:24:15 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into tasks (id) values (select id from adm.tasks) -- ((SELECT
    ID
FROM ADM.TASKS
    /* ADM.TASKS.tableScan */
    /* scanCount: 2 */)) [90053-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:41)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:96)
	at pl.lodz.p.components.service.DbService.update(DbService.java:162)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:29:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Feature not supported: "VARCHAR + TIMESTAMP"; SQL statement:
select 'insert into tasks values (' + id +','+ section+','+ number+','+ question+','+ answer+','+ type+','+ author+','+ date_created +')' from adm.tasks; [50100-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.getUnsupportedException(DbException.java:216)
	at org.h2.expression.Operation.optimize(Operation.java:310)
	at org.h2.command.dml.Select.prepare(Select.java:829)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:29:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Feature not supported: "VARCHAR + TIMESTAMP"; SQL statement:
select 'insert into tasks values (' + id +','+ section+','+ number+','+ question+','+ answer+','+ type+','+ author+','+ sysdate +')' from adm.tasks; [50100-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.getUnsupportedException(DbException.java:216)
	at org.h2.expression.Operation.optimize(Operation.java:310)
	at org.h2.command.dml.Select.prepare(Select.java:829)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:30:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "insert into tasks values ("; SQL statement:
select 'insert into tasks values (' + id +','+ section+','+ number+','+ question+','+ answer+','+ type+','+ author+')' from adm.tasks; [22018-182]
02-02 00:34:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT 'insert into tasks values (' || ID ||',' || SECTION')'[*] FROM ADM.TASKS; "; SQL statement:
select 'insert into tasks values (' || id ||',' || section')' from adm.tasks; [42000-182]
02-02 00:36:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "select 'insert into tasks values (' || id ||',' || section ||',' || number||',' ||question||',' ||answer||',' ||type||',' ||author||',' ||'date_created||',' ||')[*]' as insert from adm.tasks;"; SQL statement:
select 'insert into tasks values (' || id ||',' || section ||',' || number||',' ||question||',' ||answer||',' ||type||',' ||author||',' ||'date_created||',' ||')' as insert from adm.tasks; [42000-182]
02-02 00:36:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "select 'insert into tasks values (' || id ||',' || section ||',' || number||',' ||question||',' ||answer||',' ||type||',' ||author||',' ||'date_created||',' || ')[*]' insert from adm.tasks;"; SQL statement:
select 'insert into tasks values (' || id ||',' || section ||',' || number||',' ||question||',' ||answer||',' ||type||',' ||author||',' ||'date_created||',' || ')' insert from adm.tasks; [42000-182]
02-02 00:36:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "select 'insert into tasks values (' || id ||',' || section ||',' || number||',' ||question||',' ||answer||',' ||type||',' ||author||',' ||'date_created||',' || ')[*]' from adm.tasks;"; SQL statement:
select 'insert into tasks values (' || id ||',' || section ||',' || number||',' ||question||',' ||answer||',' ||type||',' ||author||',' ||'date_created||',' || ')' from adm.tasks; [42000-182]
02-02 00:36:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "select 'insert into tasks values (' || id ||',' || section ||',' || number||',' ||question||',' ||answer||',' ||type||',' ||author||',' ||'date_created||',[*]' from adm.tasks;"; SQL statement:
select 'insert into tasks values (' || id ||',' || section ||',' || number||',' ||question||',' ||answer||',' ||type||',' ||author||',' ||'date_created||',' from adm.tasks; [42000-182]
02-02 00:37:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "select 'insert into tasks values (' || id ||',' || section ||',' || number||',' ||question||',' ||answer||',' ||type||',' ||author||',' ||[*]'date_created from adm.tasks;"; SQL statement:
select 'insert into tasks values (' || id ||',' || section ||',' || number||',' ||question||',' ||answer||',' ||type||',' ||author||',' ||'date_created from adm.tasks; [42000-182]
02-02 00:37:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "select 'insert into tasks values (' || id ||',' || section ||',' || number||',' ||question||',' ||answer||',' ||type||',' ||author||',' ||[*]'date from adm.tasks;"; SQL statement:
select 'insert into tasks values (' || id ||',' || section ||',' || number||',' ||question||',' ||answer||',' ||type||',' ||author||',' ||'date from adm.tasks; [42000-182]
02-02 00:43:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS VALUES (101,1,1,'Wykonaj swoje pierwsze zapytanie i zatwierdź kombinacją klawiszy Ctrl+Enter. SELECT * FROM DUAL;',NULL,QUERY,ŁUKASZ OCHMAŃSKI[*],);
                                                                                                                                                                                                                                              
                                                                                                                                                              
                                                                                                                                                                                                                          
                                                                                                                                                                                                                                          
                                                                                                                   
                                                                                                                                                               
                                                                                                           
                                                                                                                    
                                                                                                                                                                                                        
                                                                                                                                           
                                                                                                                                                        
                                                                                                                                                                       
                                                                                                                                    
                                                                                                                                                               
                                                                                                                  
expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into tasks values (101,1,1,'Wykonaj swoje pierwsze zapytanie i zatwierdź kombinacją klawiszy Ctrl+Enter. SELECT * FROM DUAL;',null,QUERY,Łukasz Ochmański,);
--insert into tasks values (102,1,2,'Pokaż wszystkie tabele w schemacie 'PUBLIC', używając poniższej składni SQL: SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='PUBLIC'; ',null,QUERY,Łukasz Ochmański,);
--insert into tasks values (103,1,3,'Utwórz schemat <swojenazwisko>_<nr albumu> za pomocą polecenia CREATE SCHEMA kowalski_123456;',null,C,Łukasz Ochmański,);
--insert into tasks values (104,1,4,'Usuń schemat <swojenazwisko>_<nr albumu> za pomocą polecenia: DROP SCHEMA kowalski_123456; a następnie stwórz go ponownie: CREATE SCHEMA kowalski_123456;',null,M,Łukasz Ochmański,);
--insert into tasks values (105,1,5,'Stwórz tabelę OSOBY zawierającą definicję klucza głównego nr_osoby typu int, imię – znakowy o 40 znakach, nazwisko – analogicznie, adres znakowy o 500 znakach, wiek int.',null,C,Łukasz Ochmański,);
--insert into tasks values (106,1,6,'Sprawdź, ile rekordów znajduje się w tabeli OSOBY.',null,U,Łukasz Ochmański,);
--insert into tasks values (107,1,7,'Wstaw do tabeli jeden rekord imię Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.',null,U,Łukasz Ochmański,);
--insert into tasks values (108,1,8,'Wyświetl wszystkie rekordy z tabeli OSOBY.',null,N,Łukasz Ochmański,);
--insert into tasks values (109,1,9,'Sprawdź ponownie, ile rekordów jest w tabeli OSOBY.',null,N,Łukasz Ochmański,);
--insert into tasks values (110,1,10,'Utwórz drugą tabelę DZIECI o następującej strukturze: nr_dziecka int przyrostowy od 100 co 1, nr_osoby int, imie znakowy do 40 znaków.',null,N,Łukasz Ochmański,);
--insert into tasks values (111,1,11,'Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Jaś oraz Małgosia.',null,I,Łukasz Ochmański,);
--insert into tasks values (112,1,12,'Dodaj do tabeli OSOBY kolumnę data_wpisu zawierającą automatycznie datę wpisu rekordu.',null,I,Łukasz Ochmański,);
--insert into tasks values (113,1,13,'Wstaw do tabeli OSOBY kolejny rekord: imię: Matka, nazwisko: Chrzestna, adres Wróżkolandia, wiek 105.',null,I,Łukasz Ochmański,);
--insert into tasks values (114,1,14,'Dopisz do tabeli DZIECI Kopciuszka tak, żeby jego id_dziecka = 10.',null,A,Łukasz Ochmański,);
--insert into tasks values (115,1,15,'Załóż ograniczenie, które od tej pory nie pozwoli na wprowadzanie osób starszych niż 100 lat.',null,A,Łukasz Ochmański,);
--insert into tasks values (116,1,16,'Sprawdź na przykładach, czy ograniczenie działa.',null,N,Łukasz Ochmański,);
--insert into tasks values (201,2,1,'W schemacie <nr albumu>_biblioteka stworzyć tabelę „Czytelnicy” z następującymi kolumnami: pole id o 5 znakach powinno składać się z dwóch liter + 3 cyfr, klucz główny, pole nazwisko – typ znakowy o zmiennej długości do 15 znaków, pole imie – j.w., pole pesel powinno składać się z 11 cyfr – niepuste, pole nazwisko, imie, pesel, data_ur –niepuste, pole plec 1 znak – powinno zawierać tylko literę K lub M, pole telefon – do 15 znaków, ',null,C,Łukasz Ochmański,); [42001-182]
02-02 00:44:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS VALUES (101,1,1,'Wykonaj swoje pierwsze zapytanie i zatwierdź kombinacją klawiszy Ctrl+Enter. SELECT * FROM DUAL;',NULL,QUERY,ŁUKASZ OCHMAŃSKI[*],); "; expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into tasks values (101,1,1,'Wykonaj swoje pierwsze zapytanie i zatwierdź kombinacją klawiszy Ctrl+Enter. SELECT * FROM DUAL;',null,QUERY,Łukasz Ochmański,); [42001-182]
02-02 00:44:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS VALUES (102,1,2,'Pokaż wszystkie tabele w schemacie 'PUBLIC[*]', używając poniższej składni SQL: SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='PUBLIC'; ',NULL,QUERY,ŁUKASZ OCHMAŃSKI,); "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into tasks values (102,1,2,'Pokaż wszystkie tabele w schemacie 'PUBLIC', używając poniższej składni SQL: SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='PUBLIC'; ',null,QUERY,Łukasz Ochmański,); [42001-182]
02-02 00:44:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS VALUES (102,1,2,'Pokaż wszystkie tabele w schemacie ''PUBLIC'', używając poniższej składni SQL: SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=''PUBLIC''; ',NULL,QUERY,ŁUKASZ OCHMAŃSKI[*],); "; expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into tasks values (102,1,2,'Pokaż wszystkie tabele w schemacie ''PUBLIC'', używając poniższej składni SQL: SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=''PUBLIC''; ',null,QUERY,Łukasz Ochmański,); [42001-182]
02-02 00:44:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS VALUES (102,1,2,'Pokaż wszystkie tabele w schemacie '''PUBLIC[*]''', używając poniższej składni SQL: SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='''PUBLIC'''; ',NULL,QUERY,ŁUKASZ OCHMAŃSKI,); "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into tasks values (102,1,2,'Pokaż wszystkie tabele w schemacie '''PUBLIC''', używając poniższej składni SQL: SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='''PUBLIC'''; ',null,QUERY,Łukasz Ochmański,); [42001-182]
02-02 00:49:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
--select distinct table_schema from Information_schema.tables
drop schema test_pracownicy;
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:49:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
--select distinct table_schema from Information_schema.tables
drop schema logs;
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:49:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
--select distinct table_schema from Information_schema.tables
drop table locations;
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:51:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
--select TABLE_NAME from Information_schema.tables where table_schema='PUBLIC'
DROP TABLE COUNTRIES;
DROP TABLE JOBS;
DROP TABLE EMPLOYEES;
DROP TABLE REGIONS;
DROP TABLE JOB_HISTORY;
DROP TABLE DEPARTMENTS;
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:52:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), 'select * from dual', 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:03:53.986'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), STRINGDECODE('SELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:06:50.122'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'C', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:09:58.22'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'M', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:10:53.57'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'C', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:12:23.634'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'U', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:13:10.626'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'U', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:13:34.136'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'N', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:14:29.384'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'N', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:15:27.562'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'N', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:16:15.561'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'I', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:17:02.189'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'I', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:17:43.05'), (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'I', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:18:14.252'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'A', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:19:55.326'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'A', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:20:31.552'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'N', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:21:07.201'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'C', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:27:08.869'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:54:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO ADM.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-01 18:42:23.365'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:54:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-01 18:42:23.365'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 00:54:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
DROP SCHEMA ADM [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:60)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$819648df.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 22:57:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table logs [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 22:57:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 22:57:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table tasks [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 22:57:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table logs [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 22:57:36 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "LOGS" not found; SQL statement:
drop table logs [42102-182]
02-02 22:57:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "INFORMATION_SCHEMA" not found; SQL statement:
select * from information_schema [42102-182]
02-02 22:58:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "SCHEMA" not found; SQL statement:
select * from information_schema.tables where schema='PUBLIC' [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:178)
	at org.h2.command.dml.Select.prepare(Select.java:832)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:01:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR (100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status  [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:02:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:03:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:03:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:03:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:03:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:04:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table students (
	last_success_login DATETIME,
	last_error_login DATETIME,
	status VARCHAR(10),
	salt VARCHAR(256),
	password VARCHAR(256),
	error_counter INT
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:04:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:04:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:04:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:04:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:05:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:05:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:05:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:06:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	account_ [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:06:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "VA"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,

	salt VA [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:06:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "VAR"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	salt VAR [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:06:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,

	passwor [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:06:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	password [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:06:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	error_co [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:06:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,

	error_counter INT
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:07:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:07:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:07:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE STUDENTS (
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT SYSDATE,
	LAST_SUCCESS_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(25 [*]"; expected "K, M, G, CHAR, )"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	status VARCHAR(10),
	salt VARCHAR(25 [42001-182]
02-02 23:08:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE STUDENTS (
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT SYSDATE,

	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	 [*]"; expected "identifier"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,

	status VARCHAR(10),
	salt VARCHAR(256),
	password VARCHAR(256),
	 [42001-182]
02-02 23:08:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	status VARCHAR(10),
	salt VARCHAR(256),
	password VARCHAR(256),
	e [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:08:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	status VARCHAR(10),
	password VARCHAR(256),
	error_counter INT
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:08:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:08:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:08:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:08:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:08:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:09:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,

	passwor [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:09:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	password [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:09:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	password [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:09:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	password [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:09:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	password [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:09:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME
) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:10:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:10:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table students (
	last_success_login DATETIME,
	last_error_login DATETIME,
	status VARCHAR(10),
	salt VARCHAR(256),
	password VARCHAR(256),
	error_counter INT
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:10:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:10:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:13:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "V"; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME,
	status V [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:14:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table students (
	id INT NOT NULL,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	date_created DATETIME default sysdate,
	last_success_login DATETIME,
	last_error_login DATETIME
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:14:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table students add column 	status VARCHAR(10); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:14:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table students add columnsalt VARCHAR(256) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:14:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table students add column salt VARCHAR(256) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:15:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table students add column 
	password VARCHAR(256) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:15:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table students add column 
	error_counter INT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:15:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE STUDENTS RENAME COLUMNSALT[*] SALT "; expected "TO"; SQL statement:
alter table students rename columnsalt salt [42001-182]
02-02 23:15:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE STUDENTS RENAME COLUMNSALT[*] TO SALT "; expected "TO"; SQL statement:
alter table students rename columnsalt to salt [42001-182]
02-02 23:16:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE STUDENTS RENAME COLUMN[*] COLUMNSALT TO SALT "; expected "TO"; SQL statement:
alter table students rename column columnsalt to salt [42001-182]
02-02 23:18:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "RENAME" not found; SQL statement:
alter table students alter column rename columnsalt to salt [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:636)
	at org.h2.command.Parser.parseAlterTable(Parser.java:5398)
	at org.h2.command.Parser.parseAlter(Parser.java:4708)
	at org.h2.command.Parser.parsePrepared(Parser.java:332)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:18:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table students alter column columnsalt rename  to salt [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:18:30 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Duplicate column name "SALT"; SQL statement:
alter table students alter column columnsalt rename  to salt [42121-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.renameColumn(Table.java:417)
	at org.h2.command.ddl.AlterTableRenameColumn.update(AlterTableRenameColumn.java:52)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:98)
	at pl.lodz.p.components.service.DbService.update(DbService.java:162)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:18:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table students drop column columnsalt [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:21:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:21:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "DA"; SQL statement:
create table tasks (
 id INT NOT NULL
 , section INT NOT NULL
 , number INT NOT NULL
 , question VARCHAR (2000)
 , answer VARCHAR (2000)
 , type VARCHAR (10)
 , author VARCHAR (100)
 , date_created DA [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:21:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "DA"; SQL statement:
create table tasks (
 id INT NOT NULL
 , section INT NOT NULL
 , number INT NOT NULL
 , question VARCHAR (2000)
 , answer VARCHAR (2000)
 , type VARCHAR (10)
 , author VARCHAR (100)
 , date_created DA [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:23:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "DA"; SQL statement:
create table tasks (
 id INT NOT NULL
 , section INT NOT NULL
 , number INT NOT NULL
 , question VARCHAR (2000)
 , answer VARCHAR (2000)
 , type VARCHAR (10)
 , author VARCHAR (100)
 , date_created DA [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:23:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table tasks (
 id INT NOT NULL
 , section INT NOT NULL
 , number INT NOT NULL
 , question VARCHAR (2000)
 , answer VARCHAR (2000)

); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:23:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table tasks add column type VARCHAR (10) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:23:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table tasks add column author VARCHAR (100) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:23:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE TASKS ADD COLUMN DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),[*] "; SQL statement:
alter table tasks add column date_created DATETIME default CURRENT_TIMESTAMP(), [42000-182]
02-02 23:24:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE TASKS ADD COLUMN DATE_CREATED DATETIME DEFAULT SYSDATE,[*] "; SQL statement:
alter table tasks add column date_created DATETIME default sysdate, [42000-182]
02-02 23:24:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table tasks add column date_created DATETIME default CURRENT_TIMESTAMP() [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:24:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table tasks add column date_modified DATETIME [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:24:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table tasks add column question_ver VARCHAR(10) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:24:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table tasks add column database_vendor VARCHAR(20) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:25:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table tasks add column database_ver VARCHAR(20) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:26:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:26:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:26:35 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Constraint "TASKS_ID_PK" already exists; SQL statement:
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number); [90045-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.command.CommandList.update(CommandList.java:42)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:98)
	at pl.lodz.p.components.service.DbService.update(DbService.java:162)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:26:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:26:45 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Index "IDX_TASKS_SECTION_NUMBER" already exists; SQL statement:
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number); [42111-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:65)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:98)
	at pl.lodz.p.components.service.DbService.update(DbService.java:162)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:27:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE LOGS(
	ID    INT NOT NULL
    , STUDENT_ID INT
	, SESSION_ID VARCHAR(100)
	, CLIENT_ID VARCHAR(20)
	, TASK_ID INT
	, ANSWER VARCHAR(2000)
	, CORRECT VARCHAR(5)
	, LOG_DATE DATETIME DEFAUL[*] "; expected "(, FOR, UNSIGNED, NOT, NULL, AS, DEFAULT, GENERATED, NOT, NULL, AUTO_INCREMENT, BIGSERIAL, SERIAL, IDENTITY, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
create table logs(
	id    INT NOT NULL
    , student_id INT
	, session_ID VARCHAR(100)
	, client_id VARCHAR(20)
	, task_id INT
	, answer VARCHAR(2000)
	, correct VARCHAR(5)
	, log_date DATETIME defaul [42001-182]
02-02 23:27:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "SYSDAT" not found; SQL statement:
create table logs(	id    INT NOT NULL    , student_id INT	, session_ID VARCHAR(100)	, client_id VARCHAR(20)	, task_id INT	, answer VARCHAR(2000)	, correct VARCHAR(5)	, log_date DATETIME default sysdat [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.table.Column.setDefaultExpression(Column.java:214)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3864)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:27:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "CURREN" not found; SQL statement:
create table logs(	id    INT NOT NULL    , student_id INT	, session_ID VARCHAR(100)	, client_id VARCHAR(20)	, task_id INT	, answer VARCHAR(2000)	, correct VARCHAR(5)	, log_date DATETIME default CURREN [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.table.Column.setDefaultExpression(Column.java:214)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3864)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:27:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table logs(	id    INT NOT NULL    , student_id INT	, session_ID VARCHAR(100)	, client_id VARCHAR(20)	, task_id INT	, answer VARCHAR(2000)	, correct VARCHAR(5)	); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:28:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table logs add column log_date DATETIME default CURRENT_TIMESTAMP(); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:29:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_ [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:29:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "ID"; SQL statement:
create table login_events(
	id INT NOT NULL
	, student_id INT
	, session id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
) [50004-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:3982)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3845)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5752)
	at org.h2.command.Parser.parseCreate(Parser.java:4141)
	at org.h2.command.Parser.parsePrepared(Parser.java:350)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:29:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:29:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:30:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (101, 1, 1, STRINGDECODE([*]'Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+En"; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+En [42000-182]
02-02 23:32:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (101, 1, 1, STRINGDECODE([*]'Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+En"; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+En [42000-182]
02-02 23:33:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR) VALUES (101, 1, 1, STRINGDECODE([*]'Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * "; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT *  [42000-182]
02-02 23:34:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR) VALUES (101, 1, 1, STRINGDECODE([*]'Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * "; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT *  [42000-182]
02-02 23:36:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (101, 1, 1, 'wykonaj swoje pierwsze zapytanie', 'select * from dual;', 'Łukasz Ochmański', sysdate); [21002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:265)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:38:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (101, 1, 1, 'wykonaj swoje pierwsze zapytanie', 'select * from dual;', 'QUERY', 'Łukasz Ochmański', sysdate) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:39:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'[*]', u\u017cywaj\u0105c poni\u017cs"; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cs [42000-182]
02-02 23:40:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'[*]', u\u017cywaj\u0105c poni\u017cs"; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cs [42000-182]
02-02 23:41:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (102, 1, 2, 
'Pokaż wszystkie zapytania', 
'select',
'QUERY', 
STRINGDECODE('\u0141ukasz Ochma\u0144ski'), 
[*]"; expected "), DEFAULT, NOT, EXISTS, INTERSECTS"; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (102, 1, 2, 
'Pokaż wszystkie zapytania', 
'select',
'QUERY', 
STRINGDECODE('\u0141ukasz Ochma\u0144ski'), 
 [42001-182]
02-02 23:41:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (102, 1, 2, 
'pp', 
'select',
'QUERY', 
STRINGDECODE('\u0141ukasz Ochma\u0144ski'), 
TIMESTAMP [*]'2015-02-01 1"; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (102, 1, 2, 
'pp', 
'select',
'QUERY', 
STRINGDECODE('\u0141ukasz Ochma\u0144ski'), 
TIMESTAMP '2015-02-01 1 [42000-182]
02-02 23:41:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (102, 1, 2, 
'pp', 
'select',
'QUERY', 
'Łukasz Ochmański', 
TIMESTAMP '2015-02-01 19:06:50.122'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:47:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from tasks [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:62)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$c003a343.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:48:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (101, 1, 1, STRINGDECODE([*]'Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+En"; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+En [42000-182]
02-02 23:48:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (101, 1, 1, STRINGDECODE([*]'Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+En"; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+En [42000-182]
02-02 23:55:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_session_id ON login_events (login_date); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:55:22 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Index "IDX_LOGIN_EVENTS_SESSION_ID" already exists; SQL statement:
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_session_id ON login_events (login_date); [42111-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:65)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:101)
	at pl.lodz.p.components.service.DbService.update(DbService.java:162)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:55:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
--CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_session_id ON login_events (login_date); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:55:41 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Index "IDX_LOGIN_EVENTS_SESSION_ID" already exists; SQL statement:
--CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_session_id ON login_events (login_date); [42111-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:65)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.command.CommandList.update(CommandList.java:42)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:101)
	at pl.lodz.p.components.service.DbService.update(DbService.java:162)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:56:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
--CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
--CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:56:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
--CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
--CREATE INDEX IDX_login_events_login_date ON login_events (login_date); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:56:15 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Index "IDX_LOGIN_EVENTS_SESSION_ID" already exists; SQL statement:
--CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
--CREATE INDEX IDX_login_events_login_date ON login_events (login_date); [42111-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:65)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.command.CommandList.update(CommandList.java:42)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:101)
	at pl.lodz.p.components.service.DbService.update(DbService.java:162)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:56:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
CREATE INDEX IDX_login_events_student_id ON login_events (student_id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:56:21 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Index "IDX_LOGIN_EVENTS_STUDENT_ID" already exists; SQL statement:
CREATE INDEX IDX_login_events_student_id ON login_events (student_id); [42111-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:65)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:101)
	at pl.lodz.p.components.service.DbService.update(DbService.java:162)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-02 23:56:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), 'select * from dual', 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:03:53.986'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), STRINGDECODE('SELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:06:50.122'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'C', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:09:58.22'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'M', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:10:53.57'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'C', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:12:23.634'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'U', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:13:10.626'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'U', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:13:34.136'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'N', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:14:29.384'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'N', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:15:27.562'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'N', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:16:15.561'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'I', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:17:02.189'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'I', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:17:43.05'), (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'I', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:18:14.252'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'A', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:19:55.326'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'A', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:20:31.552'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'N', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:21:07.201'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'C', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-01 19:27:08.869'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:03:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO STUDENTS (183566[*], 'Łukasz', 'Ochmański', SYSDATE, NULL, NULL, 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0); "; expected "identifier"; SQL statement:
insert into students (183566, 'Łukasz', 'Ochmański', sysdate, null, null, 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0); [42001-182]
02-03 00:04:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into students values (183566, 'Łukasz', 'Ochmański', sysdate, null, null, 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:05:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT  DATEADD(SYSDATE, 2)[*] FROM DUAL "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,"; SQL statement:
select  DATEADD(sysdate, 2) from dual [42001-182]
02-03 00:07:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update students set last_success_login= DATEADD('MONTH', -1, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:08:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update students set last_error_login= DATEADD('MONTH', -3, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:14:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "DATABASE_VERSION" not found; SQL statement:
update tasks set database_version=(select value from information_schema.settings where name='info.version'); [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:636)
	at org.h2.command.Parser.readTableColumn(Parser.java:701)
	at org.h2.command.Parser.parseUpdate(Parser.java:735)
	at org.h2.command.Parser.parsePrepared(Parser.java:455)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:15:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "DATABASE_VERSION" not found; SQL statement:
update tasks set database_version='1.4.182 (2014-10-17)'; [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:636)
	at org.h2.command.Parser.readTableColumn(Parser.java:701)
	at org.h2.command.Parser.parseUpdate(Parser.java:735)
	at org.h2.command.Parser.parsePrepared(Parser.java:455)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:15:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set database_ver='1.4.182 (2014-10-17)'; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:16:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
--update tasks set date_created=sysdate; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:16:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set date_created=sysdate; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:17:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set date_modified=sysdate; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:17:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set DATABASE_VENDOR='H2'; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:18:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set QUESTION_VER	='1.0.0'; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:18:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set type='CREATE' WHERE type='C'; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:19:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set type='UKNOWN' WHERE type='U'; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:20:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set type='INSERT' WHERE type='I'; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:21:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set type='ALTER' WHERE type='A'; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:22:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set type='TEST' WHERE type='N'; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:22:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set type='MODIFY' WHERE type='M'; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:23:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set type='INSERT' WHERE id=107; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:23:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set type='TEST' WHERE id=106; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 00:24:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set type='CREATE' WHERE id=110; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$4c57c6a7.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:52)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 22:03:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table login_events add column IP VARCHAR(40); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 22:03:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
alter table login_events add column USER_AGENT VARCHAR(500); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 22:31:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 22:31:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 22:31:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Constraint "LOGIN_EVENTS_ID_PK" already exists; SQL statement:
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id); [90045-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:101)
	at pl.lodz.p.components.service.DbService.update(DbService.java:162)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 22:32:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ANSWERS (
	ID INT NOT NULL
	, TASK_ID INT
	, ANSWER VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	,[*] DATE_MODIFIED DATETIME
); "; expected "identifier"; SQL statement:
create table answers (
	id INT NOT NULL
	, task_id INT
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	, DATE_MODIFIED DATETIME
); [42001-182]
02-03 22:33:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ANSWERS (
	ID INT NOT NULL
	, TASK_ID INT
	, ANSWER VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	,[*] DATE_MODIFIED DATETIME
); "; expected "identifier"; SQL statement:
create table answers (
	id INT NOT NULL
	, task_id INT
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	, DATE_MODIFIED DATETIME
); [42001-182]
02-03 22:34:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table answers (
	id INT NOT NULL
	, task_id INT
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 22:34:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 22:34:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
CREATE INDEX IDX_answers_task_id ON answers (task_id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 22:34:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE answers ADD CONSTRAINT answers_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 22:52:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (301, 1, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 22:52:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 22:54:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (301, 301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 23:17:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301, 301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (302, 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 308, ';', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 310, 'select p.nazwisko+' pracuje w dziale: '+d.nazwa as wyniki
from test_pracownicy.pracownicy p
inner join dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max
from test_pracownicy.pracownicy p
join dzialy d on p.id_dzialu=d.id_dzialu
join stanowiska s on p.stanowisko=s.stanowisko
where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 315, 'select d.nazwa, avg(p.placa) as średnia
 from test_pracownicy.pracownicy p
 join dzialy d on p.id_dzialu=d.id_dzialu
  group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 318, 'select d.id_dzialu
from dzialy d
where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 23:18:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (302, 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 308, ';', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 310, 'select p.nazwisko+' pracuje w dziale: '+d.nazwa as wyniki
from test_pracownicy.pracownicy p
inner join dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max
from test_pracownicy.pracownicy p
join dzialy d on p.id_dzialu=d.id_dzialu
join stanowiska s on p.stanowisko=s.stanowisko
where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 315, 'select d.nazwa, avg(p.placa) as średnia
 from test_pracownicy.pracownicy p
 join dzialy d on p.id_dzialu=d.id_dzialu
  group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 318, 'select d.id_dzialu
from dzialy d
where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 23:18:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "
INSERT INTO ANSWERS VALUES (310, 310, 'select p.nazwisko+' PRACUJE[*] W DZIALE: '+d.nazwa as wyniki
from test_pracownicy.pracownicy p
inner join dzialy d on p.id_dzialu=d.id_dzialu;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max
from test_pracownicy.pracownicy p
join dzialy d on p.id_dzialu=d.id_dzialu
join stanowiska s on p.stanowisko=s.stanowisko
where s.placa_min>1500 and s.placa_max<3500;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (315, 315, 'select d.nazwa, avg(p.placa) as średnia
 from test_pracownicy.pracownicy p
 join dzialy d on p.id_dzialu=d.id_dzialu
  group by d.nazwa;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (317, 3, 17, 'Podaj nazwiska szefów.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (318, 318, 'select d.id_dzialu
from dzialy d
where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', SYSDATE, SYSDATE); "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:

insert into answers values (310, 310, 'select p.nazwisko+' pracuje w dziale: '+d.nazwa as wyniki
from test_pracownicy.pracownicy p
inner join dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max
from test_pracownicy.pracownicy p
join dzialy d on p.id_dzialu=d.id_dzialu
join stanowiska s on p.stanowisko=s.stanowisko
where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 315, 'select d.nazwa, avg(p.placa) as średnia
 from test_pracownicy.pracownicy p
 join dzialy d on p.id_dzialu=d.id_dzialu
  group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 318, 'select d.id_dzialu
from dzialy d
where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [42001-182]
02-03 23:20:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 310, 'select p.nazwisko+'' pracuje w dziale: ''+d.nazwa as wyniki
from test_pracownicy.pracownicy p
inner join dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max
from test_pracownicy.pracownicy p
join dzialy d on p.id_dzialu=d.id_dzialu
join stanowiska s on p.stanowisko=s.stanowisko
where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 315, 'select d.nazwa, avg(p.placa) as średnia
 from test_pracownicy.pracownicy p
 join dzialy d on p.id_dzialu=d.id_dzialu
  group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 318, 'select d.id_dzialu
from dzialy d
where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 23:20:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (310, 310, 'select p.nazwisko+'' pracuje w dziale: ''+d.nazwa as wyniki
from test_pracownicy.pracownicy p
inner join dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max
from test_pracownicy.pracownicy p
join dzialy d on p.id_dzialu=d.id_dzialu
join stanowiska s on p.stanowisko=s.stanowisko
where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 315, 'select d.nazwa, avg(p.placa) as średnia
 from test_pracownicy.pracownicy p
 join dzialy d on p.id_dzialu=d.id_dzialu
  group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 318, 'select d.id_dzialu
from dzialy d
where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 23:22:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update answers set answer='select nazwisko, stanowisko, placa
from pracownicy
where placa<(select avg(placa) from pracownicy)' where id=308; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 23:23:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update answers set answer='select nazwisko, stanowisko, placa
from pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy)' where id=308; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 23:25:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set question='Ilu pracowników zatrudnia każdy dział, na każdym etacie?' where id=311 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 23:44:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update answers set answer='select nazwisko, stanowisko, placa from test_pracownicy.pracownicy where placa<(select avg(placa) from test_pracownicy.pracownicy);' where id=308 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 23:47:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update answers set answer='select p.nazwisko||'' pracuje w dziale: ''||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;' where id=310 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 23:49:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update answers set answer='select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;' where id=312 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 23:52:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update answers set answer='select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;' where id=315 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-03 23:54:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update answers set answer='select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);' where id=318 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$59072990.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 01:04:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "TEST_PRACOWNICY" not found; SQL statement:
select nazwisko, placa from test_pracownicy.pracownicy; [90079-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.getSchema(Parser.java:656)
	at org.h2.command.Parser.getSchema(Parser.java:663)
	at org.h2.command.Parser.readTableFilter(Parser.java:1193)
	at org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1866)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:1975)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1860)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1681)
	at org.h2.command.Parser.parseSelect(Parser.java:1669)
	at org.h2.command.Parser.parsePrepared(Parser.java:433)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.AdmStudentService.select(AdmStudentService.java:49)
	at pl.lodz.p.components.service.AdmStudentService$$FastClassBySpringCGLIB$$c9596f54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$977a52c1.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 01:21:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "TASK_ID" not found; SQL statement:
select type from tasks where task_id=301 [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:178)
	at org.h2.command.dml.Select.prepare(Select.java:832)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.AdmService.getType(AdmService.java:71)
	at pl.lodz.p.components.service.AdmService$$FastClassBySpringCGLIB$$6f6ffc9b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$122d4ef1.getType(<generated>)
	at pl.lodz.p.components.service.QueryService.select(QueryService.java:50)
	at pl.lodz.p.components.service.QueryService$$FastClassBySpringCGLIB$$9ce6e2bd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at pl.lodz.p.components.service.QueryService$$EnhancerBySpringCGLIB$$351c62d3.select(<generated>)
	at pl.lodz.p.components.contoller.QueryController.executeQuery(QueryController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 02:06:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
revoke select on answers from student [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$3e41be2a.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 02:07:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table test (id int) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$3e41be2a.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 02:08:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table test (id int) [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:65)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$3e41be2a.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 02:08:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TEST" already exists; SQL statement:
create table test (id int) [42101-182]
02-04 02:19:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT * FORM[*] TASKS "; SQL statement:
select * form tasks [42000-182]
02-04 02:19:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Not enough rights for object "PUBLIC.ANSWERS"; SQL statement:
select * from answers [90096-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.engine.User.checkRight(User.java:101)
	at org.h2.table.TableFilter.<init>(TableFilter.java:124)
	at org.h2.command.Parser.readTableFilter(Parser.java:1231)
	at org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1866)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:1975)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1860)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1681)
	at org.h2.command.Parser.parseSelect(Parser.java:1669)
	at org.h2.command.Parser.parsePrepared(Parser.java:433)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$a1b813ce.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 02:21:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "QUESTIONS" not found; SQL statement:
select * from questions [42102-182]
02-04 02:21:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Not enough rights for object "PUBLIC.ANSWERS"; SQL statement:
select * from answers [90096-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.engine.User.checkRight(User.java:101)
	at org.h2.table.TableFilter.<init>(TableFilter.java:124)
	at org.h2.command.Parser.readTableFilter(Parser.java:1231)
	at org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1866)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:1975)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1860)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1681)
	at org.h2.command.Parser.parseSelect(Parser.java:1669)
	at org.h2.command.Parser.parsePrepared(Parser.java:433)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$a1b813ce.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 02:22:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
grant select on answers to student [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$a1b813ce.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 02:22:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Admin rights are required for this operation; SQL statement:
grant select on answers to student [90040-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.engine.User.checkAdmin(User.java:207)
	at org.h2.command.ddl.GrantRevoke.update(GrantRevoke.java:78)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:104)
	at pl.lodz.p.components.service.DbService.update(DbService.java:165)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$a1b813ce.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:04:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table logged_answers (
	id INT NOT NULL
	, log_id INT
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
CREATE INDEX IDX_LOGGED_ANS_LOG_ID ON logged_answers (log_id);
ALTER TABLE logged_answers ADD CONSTRAINT logged_ans_log_fk FOREIGN KEY (log_id) REFERENCES logs (id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:18:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table logs [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:18:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table tasks [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:18:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:18:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table login_events [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:18:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table answers [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:18:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table logged_events [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:18:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "LOGGED_EVENTS" not found; SQL statement:
drop table logged_events [42102-182]
02-04 22:18:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table logged_answers [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:19:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "SCHEMA" not found; SQL statement:
select * from information_schema.tables where schema='PUBLIC'; [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:178)
	at org.h2.command.dml.Select.prepare(Select.java:832)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:19:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "SCHEMA_NAME" not found; SQL statement:
select * from information_schema.tables where schema_name='PUBLIC'; [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:178)
	at org.h2.command.dml.Select.prepare(Select.java:832)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:19:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table test [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:20:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:20:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:23:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students;
drop table tasks;
drop table answers;
drop table logs;
drop table logged_answers;
drop SEQUENCE LOGS_SEQ_ID;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:23:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "STUDENTS" not found; SQL statement:
drop table students;
drop table tasks;
drop table answers;
drop table logs;
drop table logged_answers;
drop SEQUENCE LOGS_SEQ_ID;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID; [42102-182]
02-04 22:24:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:25:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:27:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),
	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);

CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:27:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ANSWERS" not found; SQL statement:

ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),
	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);

CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id); [42102-182]
02-04 22:29:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),
	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

create user student password 'abc';
grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:29:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "

CREATE TABLE PUBLIC.LOGIN_EVENTS(
	ID INT NOT NULL
	, STUDENT_ID INT
	, SESSION_ID INT
	, LOGIN_DATE DATETIME
	, LOGIN_INPUT VARCHAR(100)
	, SUCCESS CHAR(1),
	,[*] IP VARCHAR(40),
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE LOGIN_EVENTS ADD CONSTRAINT LOGIN_EVENTS_ID_PK PRIMARY KEY (ID);
CREATE INDEX IDX_LOGIN_EVENTS_STUDENT_ID ON LOGIN_EVENTS (STUDENT_ID);
CREATE INDEX IDX_LOGIN_EVENTS_SESSION_ID ON LOGIN_EVENTS (SESSION_ID);
CREATE INDEX IDX_LOGIN_EVENTS_LOGIN_DATE ON LOGIN_EVENTS (LOGIN_DATE);

CREATE TABLE PUBLIC.ANSWERS (
	ID INT NOT NULL
	, ANSWER VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE ANSWERS ADD CONSTRAINT ANSWERS_ID_PK PRIMARY KEY (ID);
ALTER TABLE TASKS ADD CONSTRAINT TASKS_ANSWER_FK FOREIGN KEY (ANSWER_ID) REFERENCES ANSWERS(ID);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


CREATE TABLE PUBLIC.LOGGED_ANSWERS (
	ID INT NOT NULL
	, ANSWER VARCHAR(2000)
);
ALTER TABLE LOGGED_ANSWERS ADD CONSTRAINT LOGGED_ANSWERS_PK PRIMARY KEY (ID);
ALTER TABLE LOGS ADD CONSTRAINT LOGS_ANSWER_FK FOREIGN KEY (ANSWER_ID) REFERENCES LOGGED_ANSWERS (ID);

CREATE USER STUDENT PASSWORD 'abc';
GRANT SELECT ON STUDENTS TO STUDENT;
GRANT SELECT ON TASKS TO STUDENT;
GRANT SELECT ON LOGS TO STUDENT;
GRANT SELECT ON LOGIN_EVENTS TO STUDENT; "; expected "identifier"; SQL statement:


create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),
	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

create user student password 'abc';
grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [42001-182]
02-04 22:29:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:29:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),
	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

create user student password 'abc';
grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:29:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "

CREATE TABLE PUBLIC.LOGIN_EVENTS(
	ID INT NOT NULL
	, STUDENT_ID INT
	, SESSION_ID INT
	, LOGIN_DATE DATETIME
	, LOGIN_INPUT VARCHAR(100)
	, SUCCESS CHAR(1),
	,[*] IP VARCHAR(40),
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE LOGIN_EVENTS ADD CONSTRAINT LOGIN_EVENTS_ID_PK PRIMARY KEY (ID);
CREATE INDEX IDX_LOGIN_EVENTS_STUDENT_ID ON LOGIN_EVENTS (STUDENT_ID);
CREATE INDEX IDX_LOGIN_EVENTS_SESSION_ID ON LOGIN_EVENTS (SESSION_ID);
CREATE INDEX IDX_LOGIN_EVENTS_LOGIN_DATE ON LOGIN_EVENTS (LOGIN_DATE);

CREATE TABLE PUBLIC.ANSWERS (
	ID INT NOT NULL
	, ANSWER VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE ANSWERS ADD CONSTRAINT ANSWERS_ID_PK PRIMARY KEY (ID);
ALTER TABLE TASKS ADD CONSTRAINT TASKS_ANSWER_FK FOREIGN KEY (ANSWER_ID) REFERENCES ANSWERS(ID);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


CREATE TABLE PUBLIC.LOGGED_ANSWERS (
	ID INT NOT NULL
	, ANSWER VARCHAR(2000)
);
ALTER TABLE LOGGED_ANSWERS ADD CONSTRAINT LOGGED_ANSWERS_PK PRIMARY KEY (ID);
ALTER TABLE LOGS ADD CONSTRAINT LOGS_ANSWER_FK FOREIGN KEY (ANSWER_ID) REFERENCES LOGGED_ANSWERS (ID);

CREATE USER STUDENT PASSWORD 'abc';
GRANT SELECT ON STUDENTS TO STUDENT;
GRANT SELECT ON TASKS TO STUDENT;
GRANT SELECT ON LOGS TO STUDENT;
GRANT SELECT ON LOGIN_EVENTS TO STUDENT; "; expected "identifier"; SQL statement:


create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),
	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

create user student password 'abc';
grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [42001-182]
02-04 22:30:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:30:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE PUBLIC.LOGIN_EVENTS(
	ID INT NOT NULL
	, STUDENT_ID INT
	, SESSION_ID INT
	, LOGIN_DATE DATETIME
	, LOGIN_INPUT VARCHAR(100)
	, SUCCESS CHAR(1),
	,[*] IP VARCHAR(40),
	, USER_AGENT VARCHAR(500)
); "; expected "identifier"; SQL statement:
create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),
	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
); [42001-182]
02-04 22:31:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE PUBLIC.LOGIN_EVENTS(
	ID INT NOT NULL
	, STUDENT_ID INT
	, SESSION_ID INT
	, LOGIN_DATE DATETIME
	, LOGIN_INPUT VARCHAR(100)
	
	, IP VARCHAR(40),
	,[*] USER_AGENT VARCHAR(500)
); "; expected "identifier"; SQL statement:
create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	
	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
); [42001-182]
02-04 22:31:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)

); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:32:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table login_events if exists;
create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),
	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:32:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "
CREATE TABLE PUBLIC.LOGIN_EVENTS(
	ID INT NOT NULL
	, STUDENT_ID INT
	, SESSION_ID INT
	, LOGIN_DATE DATETIME
	, LOGIN_INPUT VARCHAR(100)
	, SUCCESS CHAR(1),
	,[*] IP VARCHAR(40),
	, USER_AGENT VARCHAR(500)
); "; expected "identifier"; SQL statement:

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),
	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
); [42001-182]
02-04 22:32:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table login_events if exists;
create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),
	, ip VARCHAR(40),

); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:32:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "
CREATE TABLE PUBLIC.LOGIN_EVENTS(
	ID INT NOT NULL
	, STUDENT_ID INT
	, SESSION_ID INT
	, LOGIN_DATE DATETIME
	, LOGIN_INPUT VARCHAR(100)
	, SUCCESS CHAR(1),
	,[*] IP VARCHAR(40),

); "; expected "identifier"; SQL statement:

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),
	, ip VARCHAR(40),

); [42001-182]
02-04 22:32:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table login_events if exists;
create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),

	, USER_AGENT VARCHAR(500)
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:32:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "
CREATE TABLE PUBLIC.LOGIN_EVENTS(
	ID INT NOT NULL
	, STUDENT_ID INT
	, SESSION_ID INT
	, LOGIN_DATE DATETIME
	, LOGIN_INPUT VARCHAR(100)
	, SUCCESS CHAR(1),

	,[*] USER_AGENT VARCHAR(500)
); "; expected "identifier"; SQL statement:

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),

	, USER_AGENT VARCHAR(500)
); [42001-182]
02-04 22:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table login_events if exists;
create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)

	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "
CREATE TABLE PUBLIC.LOGIN_EVENTS(
	ID INT NOT NULL
	, STUDENT_ID INT
	, SESSION_ID INT
	, LOGIN_DATE DATETIME
	, LOGIN_INPUT VARCHAR(100)

	, IP VARCHAR(40),
	,[*] USER_AGENT VARCHAR(500)
); "; expected "identifier"; SQL statement:

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)

	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
); [42001-182]
02-04 22:32:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table login_events if exists;
create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME

	, success CHAR(1),
	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:32:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "
CREATE TABLE PUBLIC.LOGIN_EVENTS(
	ID INT NOT NULL
	, STUDENT_ID INT
	, SESSION_ID INT
	, LOGIN_DATE DATETIME

	, SUCCESS CHAR(1),
	,[*] IP VARCHAR(40),
	, USER_AGENT VARCHAR(500)
); "; expected "identifier"; SQL statement:

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME

	, success CHAR(1),
	, ip VARCHAR(40),
	, USER_AGENT VARCHAR(500)
); [42001-182]
02-04 22:32:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table login_events if exists;
create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:32:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table login_events if exists;
create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1),
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:32:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table login_events if exists;
create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:33:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:33:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

create user student password 'abc';
grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:33:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "LOGIN_EVENTS" already exists; SQL statement:


create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

create user student password 'abc';
grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [42101-182]
02-04 22:34:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

create user student password 'abc';
grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:34:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: User "STUDENT" already exists; SQL statement:


create user student password 'abc';
grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90033-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateUser.update(CreateUser.java:69)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.command.CommandList.update(CommandList.java:42)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:36)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:104)
	at pl.lodz.p.components.service.DbService.update(DbService.java:165)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:35:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:36:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);

INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), 'select * from dual', 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), STRINGDECODE('SELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301, 301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (302, 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:36:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "ANSWER" not found; SQL statement:


INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), 'select * from dual', 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), STRINGDECODE('SELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301, 301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (302, 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:636)
	at org.h2.command.Parser.parseColumn(Parser.java:856)
	at org.h2.command.Parser.parseColumnList(Parser.java:840)
	at org.h2.command.Parser.parseInsert(Parser.java:1040)
	at org.h2.command.Parser.parsePrepared(Parser.java:401)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:32)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:104)
	at pl.lodz.p.components.service.DbService.update(DbService.java:165)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:38:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);

INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), 'select * from dual', 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), STRINGDECODE('SELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301, 301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (302, 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:39:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:39:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);

INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), 'select * from dual', 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), STRINGDECODE('SELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:39:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "'select * from dual' (TASKS: ANSWER_ID INT)"; SQL statement:
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), 'select * from dual', 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), STRINGDECODE('SELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)') -- (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), 'select * from dual', 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)') [22018-182]
02-04 22:42:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:42:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:42:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:43:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301, 301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (302, 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:43:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:

insert into answers values (301, 301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (302, 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);
 [21002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:265)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:32)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:104)
	at pl.lodz.p.components.service.DbService.update(DbService.java:165)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:44:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (601, 6, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:45:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:45:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);

INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:46:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301, 301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (302, 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:46:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:

insert into answers values (301, 301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (302, 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [21002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:265)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.command.CommandList.executeRemaining(CommandList.java:32)
	at org.h2.command.CommandList.update(CommandList.java:43)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:535)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:549)
	at pl.lodz.p.h2.DatabaseAdmImpl.update(DatabaseAdmImpl.java:104)
	at pl.lodz.p.components.service.DbService.update(DbService.java:165)
	at pl.lodz.p.components.service.DbService.fallBackUpdate(DbService.java:80)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:48:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "LOGS_SEQ_ID" not found; SQL statement:
select LOGS_SEQ_ID from dual;
--insert into answers values (301, 301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);
 [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:829)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:48:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "LOGS_SEQ_ID.NEXT" not found; SQL statement:
select LOGS_SEQ_ID.next from dual;
--insert into answers values (301, 301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);
 [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:829)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:48:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "LOGS_SEQ_ID.VAL" not found; SQL statement:
select LOGS_SEQ_ID.val from dual;
--insert into answers values (301, 301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);
 [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:829)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:51:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:52:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);

INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values ( 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:52:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "
INSERT INTO ANSWERS VALUES (301 'select nazwisko, placa from test_pracownicy.pracownicy;'[*], SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES ( 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (306, 'select min(placa) from test_pracownicy.pracownicy;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (310, 'select p.nazwisko||' PRACUJE W DZIALE: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (317, 3, 17, 'Podaj nazwiska szefów.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', SYSDATE, SYSDATE);
 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:

insert into answers values (301 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values ( 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);
 [42001-182]
02-04 22:52:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:52:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values ( 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);

 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:53:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from answers
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:53:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from tasks
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:53:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values ( 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);

 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:53:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "
INSERT INTO ANSWERS VALUES (301 'select nazwisko, placa from test_pracownicy.pracownicy;'[*], SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES ( 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (306, 'select min(placa) from test_pracownicy.pracownicy;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (310, 'select p.nazwisko||' PRACUJE W DZIALE: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (317, 3, 17, 'Podaj nazwiska szefów.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', SYSDATE, SYSDATE);

 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:

insert into answers values (301 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values ( 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);

 [42001-182]
02-04 22:53:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from answers

 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:53:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from tasks

 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:53:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
--insert into answers values (301 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:53:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ANSWERS VALUES (301 'select nazwisko, placa from test_pracownicy.pracownicy;'[*], SYSDATE, SYSDATE);

 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into answers values (301 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

 [42001-182]
02-04 22:55:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ANSWERS VALUES (301 'select nazwisko, placa from test_pracownicy.pracownicy'[*], SYSDATE, SYSDATE);

 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into answers values (301 'select nazwisko, placa from test_pracownicy.pracownicy', sysdate, sysdate);

 [42001-182]
02-04 22:55:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ANSWERS VALUES (301 'select nazwisko, placa from test_pracownic'[*], SYSDATE, SYSDATE);

 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into answers values (301 'select nazwisko, placa from test_pracownic', sysdate, sysdate);

 [42001-182]
02-04 22:55:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ANSWERS VALUES (301 'select nazwisko, placa from test_'[*], SYSDATE, SYSDATE);

 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into answers values (301 'select nazwisko, placa from test_', sysdate, sysdate);

 [42001-182]
02-04 22:55:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ANSWERS VALUES (301 'select nazwisko, placa from test'[*], SYSDATE, SYSDATE);

 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into answers values (301 'select nazwisko, placa from test', sysdate, sysdate);

 [42001-182]
02-04 22:55:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ANSWERS VALUES (301 'select nazwisko, placa from'[*], SYSDATE, SYSDATE);

 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into answers values (301 'select nazwisko, placa from', sysdate, sysdate);

 [42001-182]
02-04 22:55:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ANSWERS VALUES (301 'select nazwisko, p'[*], SYSDATE, SYSDATE);

 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into answers values (301 'select nazwisko, p', sysdate, sysdate);

 [42001-182]
02-04 22:55:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ANSWERS VALUES (301 'select nazwisko'[*], SYSDATE, SYSDATE);

 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into answers values (301 'select nazwisko', sysdate, sysdate);

 [42001-182]
02-04 22:55:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ANSWERS VALUES (301 'select n'[*], SYSDATE, SYSDATE);

 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into answers values (301 'select n', sysdate, sysdate);

 [42001-182]
02-04 22:55:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT;


 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:55:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);

INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values ( 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);

 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:55:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "
INSERT INTO ANSWERS VALUES (310, 'select p.nazwisko||' PRACUJE[*] W DZIALE: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (317, 3, 17, 'Podaj nazwiska szefów.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', SYSDATE, SYSDATE);

INSERT INTO TASKS VALUES (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', NULL, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO ANSWERS VALUES (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', SYSDATE, SYSDATE);

 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:

insert into answers values (310, 'select p.nazwisko||' pracuje w dziale: '||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);

 [42001-182]
02-04 22:56:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT;
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:56:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);

INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values ( 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 'select p.nazwisko||'' pracuje w dziale: ''||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:57:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 22:57:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);

INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values ( 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 'select p.nazwisko||'' pracuje w dziale: ''||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', null, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:02:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:03:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);

INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', 301, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', 301, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values ( 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', 303, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', 304, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', 305, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', 306, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);

insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', 307, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);

insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', 308, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);

insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', 309, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);

insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', 310, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (310, 'select p.nazwisko||'' pracuje w dziale: ''||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);

insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', 311, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);

insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', 312, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);

insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', 313, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);

insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', 314, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);

insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', 315, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);

insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', 316, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);

insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', 317, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);

insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', 318, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:04:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:04:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:07:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_student_fk FOREIGN KEY (student_id) REFERENCES students(id);
ALTER TABLE logs ADD CONSTRAINT logs_task_fk FOREIGN KEY (task_id) REFERENCES tasks (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:07:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);

INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (101, 1, 1, STRINGDECODE('Wykonaj swoje pierwsze zapytanie i zatwierd\u017a kombinacj\u0105 klawiszy Ctrl+Enter. SELECT * FROM DUAL;'), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (102, 1, 2, STRINGDECODE('Poka\u017c wszystkie tabele w schemacie ''PUBLIC'', u\u017cywaj\u0105c poni\u017cszej sk\u0142adni SQL:\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=''PUBLIC''; '), null, 'QUERY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (103, 1, 3, STRINGDECODE('Utw\u00f3rz schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia\nCREATE SCHEMA kowalski_123456;'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (104, 1, 4, STRINGDECODE('Usu\u0144 schemat <swojenazwisko>_<nr albumu> za pomoc\u0105 polecenia:\nDROP SCHEMA kowalski_123456;\na nast\u0119pnie stw\u00f3rz go ponownie:\nCREATE SCHEMA kowalski_123456;'), NULL, 'MODIFY', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (105, 1, 5, STRINGDECODE('Stw\u00f3rz tabel\u0119 OSOBY zawieraj\u0105c\u0105 definicj\u0119 klucza g\u0142\u00f3wnego nr_osoby typu int, imi\u0119 \u2013 znakowy o 40 znakach, nazwisko \u2013 analogicznie, adres znakowy o 500 znakach, wiek int.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (106, 1, 6, STRINGDECODE('Sprawd\u017a, ile rekord\u00f3w znajduje si\u0119 w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (107, 1, 7, STRINGDECODE('Wstaw do tabeli jeden rekord imi\u0119 Baba, nazwisko: Jaga, adres: Domek z Piernika 100, wiek 154.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (108, 1, 8, STRINGDECODE('Wy\u015bwietl wszystkie rekordy z tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (109, 1, 9, STRINGDECODE('Sprawd\u017a ponownie, ile rekord\u00f3w jest w tabeli OSOBY.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (110, 1, 10, STRINGDECODE('Utw\u00f3rz drug\u0105 tabel\u0119 DZIECI o nast\u0119puj\u0105cej strukturze:\nnr_dziecka int przyrostowy od 100 co 1,\nnr_osoby int,\nimie znakowy do 40 znak\u00f3w.'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (111, 1, 11, STRINGDECODE('Wstaw do tabeli 2 rekordy dla osoby Baba Jaga i dzieci Ja\u015b oraz Ma\u0142gosia.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (112, 1, 12, STRINGDECODE('Dodaj do tabeli OSOBY kolumn\u0119 data_wpisu zawieraj\u0105c\u0105 automatycznie dat\u0119 wpisu rekordu.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');
INSERT INTO PUBLIC.TASKS(ID, SECTION, NUMBER, QUESTION, ANSWER_ID, TYPE, AUTHOR, DATE_CREATED, DATE_MODIFIED, QUESTION_VER, DATABASE_VENDOR, DATABASE_VER) VALUES (113, 1, 13, STRINGDECODE('Wstaw do tabeli OSOBY kolejny rekord: imi\u0119: Matka, nazwisko: Chrzestna, adres Wr\u00f3\u017ckolandia, wiek 105.'), NULL, 'INSERT', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (114, 1, 14, STRINGDECODE('Dopisz do tabeli DZIECI Kopciuszka tak, \u017ceby jego id_dziecka = 10.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (115, 1, 15, STRINGDECODE('Za\u0142\u00f3\u017c ograniczenie, kt\u00f3re od tej pory nie pozwoli na wprowadzanie os\u00f3b starszych ni\u017c 100 lat.'), NULL, 'ALTER', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (116, 1, 16, STRINGDECODE('Sprawd\u017a na przyk\u0142adach, czy ograniczenie dzia\u0142a.'), NULL, 'TEST', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)'), (201, 2, 1, STRINGDECODE('W schemacie <nr albumu>_biblioteka stworzy\u0107 tabel\u0119 \u201eCzytelnicy\u201d z nast\u0119puj\u0105cymi kolumnami:\n\n pole id o 5 znakach powinno sk\u0142ada\u0107 si\u0119 z dw\u00f3ch liter + 3 cyfr, klucz g\u0142\u00f3wny,\n pole nazwisko \u2013 typ znakowy o zmiennej d\u0142ugo\u015bci do 15 znak\u00f3w,\n pole imie \u2013 j.w.,\n pole pesel powinno sk\u0142ada\u0107 si\u0119 z 11 cyfr \u2013 niepuste,\n pole nazwisko, imie, pesel, data_ur \u2013niepuste,\n pole plec 1 znak \u2013 powinno zawiera\u0107 tylko liter\u0119 K lub M,\n pole telefon \u2013 do 15 znak\u00f3w,\n'), NULL, 'CREATE', STRINGDECODE('\u0141ukasz Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:16:59.926', TIMESTAMP '2015-02-03 00:17:07.924', '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', 301, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values ( 302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', 301, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', 303, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', 304, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', 305, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', 306, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);
insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', 307, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);
insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', 308, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);
insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', 309, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (310, 'select p.nazwisko||'' pracuje w dziale: ''||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);
insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', 310, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);
insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', 311, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);
insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', 312, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
   
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);
insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', 313, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);
insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', 314, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);
insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', 315, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);
insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', 316, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);
insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', 317, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);
insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', 318, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:14:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "TASK_ID" not found; SQL statement:
select answer from answers where task_id=304 [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:178)
	at org.h2.command.dml.Select.prepare(Select.java:832)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.AdmService.getAnswer(AdmService.java:42)
	at pl.lodz.p.components.service.AdmService$$FastClassBySpringCGLIB$$6f6ffc9b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at pl.lodz.p.components.service.AdmService$$EnhancerBySpringCGLIB$$e2bbf1a7.getAnswer(<generated>)
	at pl.lodz.p.components.service.QueryService.select(QueryService.java:49)
	at pl.lodz.p.components.service.QueryService$$FastClassBySpringCGLIB$$9ce6e2bd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at pl.lodz.p.components.service.QueryService$$EnhancerBySpringCGLIB$$5ab0589.select(<generated>)
	at pl.lodz.p.components.contoller.QueryController.executeQuery(QueryController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:15:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "TASK_ID" not found; SQL statement:
select answer from answers where task_id=304
--select LOGS_SEQ_ID.nextval from dual;
 [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:178)
	at org.h2.command.dml.Select.prepare(Select.java:832)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:16:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "TASK_ID" not found; SQL statement:
select answer from tasks t
join answers a on t.answer_id=a.id
where task_id=304

--select LOGS_SEQ_ID.nextval from dual;
 [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:178)
	at org.h2.expression.ConditionAndOr.optimize(ConditionAndOr.java:130)
	at org.h2.command.dml.Select.prepare(Select.java:832)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:16:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "ANSWER" not found; SQL statement:
select answer from tasks t
--join answers a on t.answer_id=a.id
--where task_id=304;

--select LOGS_SEQ_ID.nextval from dual;
 [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:829)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:17:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "TASK_ID" not found; SQL statement:
select * from tasks t
join answers a on t.answer_id=a.id
where task_id=304;

--select LOGS_SEQ_ID.nextval from dual;
 [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:178)
	at org.h2.expression.ConditionAndOr.optimize(ConditionAndOr.java:130)
	at org.h2.command.dml.Select.prepare(Select.java:832)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:17:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Ambiguous column name "ID"; SQL statement:
select * from tasks t
join answers a on t.answer_id=a.id
where id=304;

--select LOGS_SEQ_ID.nextval from dual;
 [90059-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.mapColumn(ExpressionColumn.java:124)
	at org.h2.expression.ExpressionColumn.mapColumns(ExpressionColumn.java:94)
	at org.h2.expression.Comparison.mapColumns(Comparison.java:480)
	at org.h2.expression.ConditionAndOr.mapColumns(ConditionAndOr.java:261)
	at org.h2.command.dml.Select.mapColumns(Select.java:1182)
	at org.h2.command.dml.Select.init(Select.java:804)
	at org.h2.command.Parser.parseSelect(Parser.java:1675)
	at org.h2.command.Parser.parsePrepared(Parser.java:433)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:18:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Ambiguous column name "ID"; SQL statement:
select a.answer from tasks t
join answers a on t.answer_id=a.id
where id=304;

--select LOGS_SEQ_ID.nextval from dual;
 [90059-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.mapColumn(ExpressionColumn.java:124)
	at org.h2.expression.ExpressionColumn.mapColumns(ExpressionColumn.java:94)
	at org.h2.expression.Comparison.mapColumns(Comparison.java:480)
	at org.h2.expression.ConditionAndOr.mapColumns(ConditionAndOr.java:261)
	at org.h2.command.dml.Select.mapColumns(Select.java:1182)
	at org.h2.command.dml.Select.init(Select.java:804)
	at org.h2.command.Parser.parseSelect(Parser.java:1675)
	at org.h2.command.Parser.parsePrepared(Parser.java:433)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:20:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "ANSWER" not found; SQL statement:
insert into logs (id, student_id, client_id, task_id, answer, correct) values (LOGS_SEQ_ID.nextval, 183566, 301, 'hahaha', 'TRUE');
 [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:636)
	at org.h2.command.Parser.parseColumn(Parser.java:856)
	at org.h2.command.Parser.parseColumnList(Parser.java:840)
	at org.h2.command.Parser.parseInsert(Parser.java:1040)
	at org.h2.command.Parser.parsePrepared(Parser.java:401)
	at org.h2.command.Parser.parse(Parser.java:305)
	at org.h2.command.Parser.parse(Parser.java:277)
	at org.h2.command.Parser.prepareCommand(Parser.java:242)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:21:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
insert into logs (id, student_id, client_id, task_id, answer_id, correct) values (LOGS_SEQ_ID.nextval, 183566, 301, 201, 'TRUE');
 [21002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:265)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:21:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into logs (id, student_id, client_id, task_id, answer_id, correct) values (LOGS_SEQ_ID.nextval, '123456', 183566, 301, 201, 'TRUE');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:22:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into logs (id, student_id, client_id, task_id, answer_id, correct) values (LOGS_SEQ_ID.nextval, 183566, '123456', 301, 201, 'TRUE');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:24:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "LOGS_ANSWER" not found; SQL statement:
insert into logs_answer values (222, 'hahaha');
--insert into logs (id, student_id, client_id, task_id, answer_id, correct) values (LOGS_SEQ_ID.nextval, 183566, '123456', 301, 222, 'TRUE');
 [42102-182]
02-04 23:25:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "LOG_ANSWERS" not found; SQL statement:
insert into log_answers values (222, 'hahaha');
--insert into logs (id, student_id, client_id, task_id, answer_id, correct) values (LOGS_SEQ_ID.nextval, 183566, '123456', 301, 222, 'TRUE');
 [42102-182]
02-04 23:25:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into logged_answers values (222, 'hahaha');
--insert into logs (id, student_id, client_id, task_id, answer_id, correct) values (LOGS_SEQ_ID.nextval, 183566, '123456', 301, 222, 'TRUE');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:25:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
--insert into logged_answers values (222, 'hahaha');
insert into logs (id, student_id, client_id, task_id, answer_id, correct) values (LOGS_SEQ_ID.nextval, 183566, '123456', 301, 222, 'TRUE');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$60d16e40.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-04 23:47:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (101, 'select * from dual;', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$85f29360.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-05 00:08:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
--select * from tasks t join answers a on t.answer_id=a.id-- where t.id=101
update tasks set answer_id=101 where id=101 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$806f9b61.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-05 01:18:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (101, 'select * from dual;', sysdate, sysdate);
insert into answers values (102, 'SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=''PUBLIC'';', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$806f9b61.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-05 01:18:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (102, 'SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=''PUBLIC'';', sysdate, sysdate); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$806f9b61.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-05 01:19:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set answer_id=102 where id=102 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$806f9b61.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-05 01:20:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO LOGGED_ANSWERS VALUES (13, 'SELECT TABLE_SCHEMA, TABLE_NAME
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA='PUBLIC[*]'; '); "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into logged_answers values (13, 'SELECT TABLE_SCHEMA, TABLE_NAME
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA='PUBLIC'; '); [42001-182]
02-05 01:23:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "L.DATE_CREATED" not found; SQL statement:
select l.id, l.date_created, a.* from logged_answers a join logs l on l.answer_id=a.id; [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:829)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:42)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$806f9b61.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 21:40:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from logged_answers where id=222 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 21:41:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
--delete from logged_answers where id=222
delete from logs where answer_id=222 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 21:41:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from logged_answers where id=222 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 22:09:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set answer_id=302 where id=302 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:07:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:17:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);


insert into answers values (101, 'select * from dual;', sysdate, sysdate);
insert into tasks values (101, 1, 1, 'Wykonaj swoje pierwsze zapytanie i zatwierdź kombinacją klawiszy Ctrl+Enter.', 101, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (102, 'SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=''PUBLIC'';', sysdate, sysdate);
insert into tasks values (102, 1, 2, 'Pokaż wszystkie tabele w schemacie ''PUBLIC'', używając poniższej składni SQL:', 102, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (103, null, sysdate, sysdate);
insert into tasks values (103, 1, 3, 'Utwórz schemat <swojenazwisko>_<nr albumu> za pomocą polecenia:
CREATE SCHEMA kowalski_123456;', 103, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (104, null, sysdate, sysdate);
insert into tasks values (104, 1, 4, 'Usuń schemat <swojenazwisko>_<nr albumu> za pomocą polecenia:
DROP SCHEMA kowalski_123456;
a następnie stwórz go ponownie:
CREATE SCHEMA kowalski_123456;', 104, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (105, null, sysdate, sysdate);
insert into tasks values (105, 1, 5, '<h4>Stwórz tabelę OSOBY zawierającą:
                <ul>
                    <li>definicję klucza głównego nr_osoby typu int,</li>
                    <li>imię – znakowy o 40 znakach,</li>
                    <li>nazwisko – analogicznie, adres znakowy o 500 znakach,</li>
                    <li>wiek int.</li>
                </ul>
            </h4>', 105, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (106, null, sysdate, sysdate);
insert into tasks values (106, 1, 6, 'Sprawdź, ile rekordów znajduje się w tabeli OSOBY.', 106, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (107, null, sysdate, sysdate);
insert into tasks values (107, 1, 7, '<h4>Wstaw do tabeli jeden rekord:
                <ul>
                    <li>imię: Baba,</li>
                    <li>nazwisko: Jaga,</li>
                    <li>adres: Domek z Piernika 100,</li>
                    <li>wiek 154.</li>
                </ul>
            </h4>', 107, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (108, null, sysdate, sysdate);
insert into tasks values (108, 1, 8, 'Wyświetl wszystkie rekordy z tabeli OSOBY.', 108, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (109, null, sysdate, sysdate);
insert into tasks values (109, 1, 9, 'Sprawdź ponownie, ile rekordów jest w tabeli OSOBY.', 109, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (110, null, sysdate, sysdate);
insert into tasks values (110, 1, 10, ' <h4>Utwórz drugą tabelę DZIECI o następującej strukturze:
                <ul>
                    <li>nr_dziecka; int przyrostowy od 100 co 1,</li>
                    <li>nr_osoby; int,</li>
                    <li>imie; znakowy do 40 znaków.</li>
                </ul>
            </h4>', 110, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (111, null, sysdate, sysdate);
insert into tasks values (111, 1, 11, '<h4>Wstaw do tabeli OSOBY jeden rekord:
                <ul>
                    <li>Baba Jaga</li>
                </ul>
            </h4>', 111, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (112, null, sysdate, sysdate);
insert into tasks values (112, 1, 12, '<h4>Wstaw do tabeli DZIECI dwa rekordy:
                <ul>
                    <li>Jaś</li>
                    <li>Małgosia</li>
                </ul>
            </h4>', 112, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (113, null, sysdate, sysdate);
insert into tasks values (113, 1, 13, 'Dodaj do tabeli OSOBY kolumnę data_wpisu zawierającą automatycznie datę wpisu rekordu.', 113, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (114, null, sysdate, sysdate);
insert into tasks values (114, 1, 14, '<h4>Wstaw do tabeli OSOBY kolejny rekord:
                <ul>
                    <li>imię: Matka,</li>
                    <li>nazwisko: Chrzestna,</li>
                    <li>adres Wróżkolandia,</li>
                    <li>wiek 105.</li>
                </ul>
            </h4>', 114, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (115, null, sysdate, sysdate);
insert into tasks values (115, 1, 15, 'Dopisz do tabeli DZIECI Kopciuszka tak, żeby jego id_dziecka = 10.', 115, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (117, null, sysdate, sysdate);
insert into tasks values (116, 1, 16, 'Załóż ograniczenie, które od tej pory nie pozwoli na wprowadzanie osób starszych niż 100 lat.', 116, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (117, null, sysdate, sysdate);
insert into tasks values (117, 1, 17, 'Sprawdź na przykładach, czy ograniczenie działa.', 117, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (118, 'HELP', sysdate, sysdate);
insert into tasks values (118, 1, 18, 'Wyświetl dokumentację bazy danych za pomocą polecenia: HELP', 118, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (201, null, sysdate, sysdate);
insert into tasks values (201, 2, 1, 'Utworzyć schemat o nazwie biblioteka_<nr albumu>.', 201, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:18:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:18:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);


insert into answers values (101, 'select * from dual;', sysdate, sysdate);
insert into tasks values (101, 1, 1, 'Wykonaj swoje pierwsze zapytanie i zatwierdź kombinacją klawiszy Ctrl+Enter.', 101, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (102, 'SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=''PUBLIC'';', sysdate, sysdate);
insert into tasks values (102, 1, 2, 'Pokaż wszystkie tabele w schemacie ''PUBLIC'', używając poniższej składni SQL:', 102, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (103, null, sysdate, sysdate);
insert into tasks values (103, 1, 3, 'Utwórz schemat <swojenazwisko>_<nr albumu> za pomocą polecenia:
CREATE SCHEMA kowalski_123456;', 103, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (104, null, sysdate, sysdate);
insert into tasks values (104, 1, 4, 'Usuń schemat <swojenazwisko>_<nr albumu> za pomocą polecenia:
DROP SCHEMA kowalski_123456;
a następnie stwórz go ponownie:
CREATE SCHEMA kowalski_123456;', 104, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (105, null, sysdate, sysdate);
insert into tasks values (105, 1, 5, '<h4>Stwórz tabelę OSOBY zawierającą:
                <ul>
                    <li>definicję klucza głównego nr_osoby typu int,</li>
                    <li>imię – znakowy o 40 znakach,</li>
                    <li>nazwisko – analogicznie, adres znakowy o 500 znakach,</li>
                    <li>wiek int.</li>
                </ul>
            </h4>', 105, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (106, null, sysdate, sysdate);
insert into tasks values (106, 1, 6, 'Sprawdź, ile rekordów znajduje się w tabeli OSOBY.', 106, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (107, null, sysdate, sysdate);
insert into tasks values (107, 1, 7, '<h4>Wstaw do tabeli jeden rekord:
                <ul>
                    <li>imię: Baba,</li>
                    <li>nazwisko: Jaga,</li>
                    <li>adres: Domek z Piernika 100,</li>
                    <li>wiek 154.</li>
                </ul>
            </h4>', 107, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (108, null, sysdate, sysdate);
insert into tasks values (108, 1, 8, 'Wyświetl wszystkie rekordy z tabeli OSOBY.', 108, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (109, null, sysdate, sysdate);
insert into tasks values (109, 1, 9, 'Sprawdź ponownie, ile rekordów jest w tabeli OSOBY.', 109, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (110, null, sysdate, sysdate);
insert into tasks values (110, 1, 10, ' <h4>Utwórz drugą tabelę DZIECI o następującej strukturze:
                <ul>
                    <li>nr_dziecka; int przyrostowy od 100 co 1,</li>
                    <li>nr_osoby; int,</li>
                    <li>imie; znakowy do 40 znaków.</li>
                </ul>
            </h4>', 110, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (111, null, sysdate, sysdate);
insert into tasks values (111, 1, 11, '<h4>Wstaw do tabeli OSOBY jeden rekord:
                <ul>
                    <li>Baba Jaga</li>
                </ul>
            </h4>', 111, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (112, null, sysdate, sysdate);
insert into tasks values (112, 1, 12, '<h4>Wstaw do tabeli DZIECI dwa rekordy:
                <ul>
                    <li>Jaś</li>
                    <li>Małgosia</li>
                </ul>
            </h4>', 112, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (113, null, sysdate, sysdate);
insert into tasks values (113, 1, 13, 'Dodaj do tabeli OSOBY kolumnę data_wpisu zawierającą automatycznie datę wpisu rekordu.', 113, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (114, null, sysdate, sysdate);
insert into tasks values (114, 1, 14, '<h4>Wstaw do tabeli OSOBY kolejny rekord:
                <ul>
                    <li>imię: Matka,</li>
                    <li>nazwisko: Chrzestna,</li>
                    <li>adres Wróżkolandia,</li>
                    <li>wiek 105.</li>
                </ul>
            </h4>', 114, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (115, null, sysdate, sysdate);
insert into tasks values (115, 1, 15, 'Dopisz do tabeli DZIECI Kopciuszka tak, żeby jego id_dziecka = 10.', 115, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (116, null, sysdate, sysdate);
insert into tasks values (116, 1, 16, 'Załóż ograniczenie, które od tej pory nie pozwoli na wprowadzanie osób starszych niż 100 lat.', 116, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (117, null, sysdate, sysdate);
insert into tasks values (117, 1, 17, 'Sprawdź na przykładach, czy ograniczenie działa.', 117, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (118, 'HELP', sysdate, sysdate);
insert into tasks values (118, 1, 18, 'Wyświetl dokumentację bazy danych za pomocą polecenia: HELP', 118, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:19:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (201, null, sysdate, sysdate);
insert into tasks values (201, 2, 1, 'Utworzyć schemat o nazwie biblioteka_<nr albumu>.', 201, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (202, null, sysdate, sysdate);
insert into tasks values (202, 2, 2, '', 202, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (203, null, sysdate, sysdate);
insert into tasks values (203, 2, 3, '', 203, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (203, null, sysdate, sysdate);
insert into tasks values (203, 2, 3, '', 203, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (204, null, sysdate, sysdate);
insert into tasks values (204, 2, 4, '', 204, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (205, null, sysdate, sysdate);
insert into tasks values (205, 2, 5, '', 205, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (206, null, sysdate, sysdate);
insert into tasks values (206, 2, 6, '', 206, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (207, null, sysdate, sysdate);
insert into tasks values (207, 2, 7, '', 207, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (208, null, sysdate, sysdate);
insert into tasks values (208, 2, 8, '', 208, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (209, null, sysdate, sysdate);
insert into tasks values (209, 2, 9, '', 209, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (210, null, sysdate, sysdate);
insert into tasks values (210, 2, 10, '', 210, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (211, null, sysdate, sysdate);
insert into tasks values (211, 2, 11, '', 211, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (212, null, sysdate, sysdate);
insert into tasks values (212, 2, 12, '', 212, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (213, null, sysdate, sysdate);
insert into tasks values (213, 2, 13, '', 213, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (214, null, sysdate, sysdate);
insert into tasks values (214, 2, 14, '', 214, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (215, null, sysdate, sysdate);
insert into tasks values (215, 2, 15, '', 215, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (216, null, sysdate, sysdate);
insert into tasks values (216, 2, 16, '', 216, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (217, null, sysdate, sysdate);
insert into tasks values (217, 2, 17, '', 217, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (218, null, sysdate, sysdate);
insert into tasks values (218, 2, 18, '', 218, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (219, null, sysdate, sysdate);
insert into tasks values (219, 3, 19, '', 219, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (220, null, sysdate, sysdate);
insert into tasks values (220, 3, 20, '', 220, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:19:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (204, null, sysdate, sysdate);
insert into tasks values (204, 2, 4, '', 204, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (205, null, sysdate, sysdate);
insert into tasks values (205, 2, 5, '', 205, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (206, null, sysdate, sysdate);
insert into tasks values (206, 2, 6, '', 206, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (207, null, sysdate, sysdate);
insert into tasks values (207, 2, 7, '', 207, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (208, null, sysdate, sysdate);
insert into tasks values (208, 2, 8, '', 208, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (209, null, sysdate, sysdate);
insert into tasks values (209, 2, 9, '', 209, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (210, null, sysdate, sysdate);
insert into tasks values (210, 2, 10, '', 210, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (211, null, sysdate, sysdate);
insert into tasks values (211, 2, 11, '', 211, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (212, null, sysdate, sysdate);
insert into tasks values (212, 2, 12, '', 212, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (213, null, sysdate, sysdate);
insert into tasks values (213, 2, 13, '', 213, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (214, null, sysdate, sysdate);
insert into tasks values (214, 2, 14, '', 214, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (215, null, sysdate, sysdate);
insert into tasks values (215, 2, 15, '', 215, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (216, null, sysdate, sysdate);
insert into tasks values (216, 2, 16, '', 216, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (217, null, sysdate, sysdate);
insert into tasks values (217, 2, 17, '', 217, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (218, null, sysdate, sysdate);
insert into tasks values (218, 2, 18, '', 218, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (219, null, sysdate, sysdate);
insert into tasks values (219, 3, 19, '', 219, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (220, null, sysdate, sysdate);
insert into tasks values (220, 3, 20, '', 220, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:20:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', 301, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', 302, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', 303, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', 304, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', 305, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', 306, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);
insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', 307, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);
insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', 308, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);
insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', 309, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (310, 'select p.nazwisko||'' pracuje w dziale: ''||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);
insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', 310, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);
insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', 311, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);
insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', 312, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
   
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);
insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', 313, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);
insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', 314, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);
insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', 315, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);
insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', 316, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);
insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', 317, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);
insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', 318, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:20:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (401, null, sysdate, sysdate);
insert into tasks values (401, 4, 1, '', 401, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (402, null, sysdate, sysdate);
insert into tasks values (402, 4, 2, '', 402, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (403, null, sysdate, sysdate);
insert into tasks values (403, 4, 3, '', 403, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (404, null, sysdate, sysdate);
insert into tasks values (404, 4, 4, '', 404, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (405, null, sysdate, sysdate);
insert into tasks values (405, 4, 5, '', 405, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (406, null, sysdate, sysdate);
insert into tasks values (406, 4, 6, '', 406, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (407, null, sysdate, sysdate);
insert into tasks values (407, 4, 7, '', 407, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (408, null, sysdate, sysdate);
insert into tasks values (408, 4, 8, '', 408, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (409, null, sysdate, sysdate);
insert into tasks values (409, 4, 9, '', 409, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (410, null, sysdate, sysdate);
insert into tasks values (410, 4, 10, '', 410, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (411, null, sysdate, sysdate);
insert into tasks values (411, 4, 11, '', 411, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (412, null, sysdate, sysdate);
insert into tasks values (412, 4, 12, '', 412, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (413, null, sysdate, sysdate);
insert into tasks values (413, 4, 13, '', 413, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (414, null, sysdate, sysdate);
insert into tasks values (414, 4, 14, '', 414, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (415, null, sysdate, sysdate);
insert into tasks values (415, 4, 15, '', 415, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (416, null, sysdate, sysdate);
insert into tasks values (416, 4, 16, '', 416, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (417, null, sysdate, sysdate);
insert into tasks values (417, 4, 17, '', 417, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (418, null, sysdate, sysdate);
insert into tasks values (418, 4, 18, '', 418, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (419, null, sysdate, sysdate);
insert into tasks values (419, 3, 19, '', 419, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (420, null, sysdate, sysdate);
insert into tasks values (420, 3, 20, '', 420, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');


insert into answers values (501, null, sysdate, sysdate);
insert into tasks values (501, 5, 1, '', 501, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (502, null, sysdate, sysdate);
insert into tasks values (502, 5, 2, '', 502, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (503, null, sysdate, sysdate);
insert into tasks values (503, 5, 3, '', 503, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (504, null, sysdate, sysdate);
insert into tasks values (504, 5, 4, '', 504, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (505, null, sysdate, sysdate);
insert into tasks values (505, 5, 5, '', 505, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (506, null, sysdate, sysdate);
insert into tasks values (506, 5, 6, '', 506, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (507, null, sysdate, sysdate);
insert into tasks values (507, 5, 7, '', 507, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (508, null, sysdate, sysdate);
insert into tasks values (508, 5, 8, '', 508, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (509, null, sysdate, sysdate);
insert into tasks values (509, 5, 9, '', 509, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (510, null, sysdate, sysdate);
insert into tasks values (510, 5, 10, '', 510, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (511, null, sysdate, sysdate);
insert into tasks values (511, 5, 11, '', 511, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (512, null, sysdate, sysdate);
insert into tasks values (512, 5, 12, '', 512, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (513, null, sysdate, sysdate);
insert into tasks values (513, 5, 13, '', 513, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (514, null, sysdate, sysdate);
insert into tasks values (514, 5, 14, '', 514, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (515, null, sysdate, sysdate);
insert into tasks values (515, 5, 15, '', 515, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (516, null, sysdate, sysdate);
insert into tasks values (516, 5, 16, '', 516, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (517, null, sysdate, sysdate);
insert into tasks values (517, 5, 17, '', 517, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (518, null, sysdate, sysdate);
insert into tasks values (518, 5, 18, '', 518, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (519, null, sysdate, sysdate);
insert into tasks values (519, 3, 19, '', 519, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (520, null, sysdate, sysdate);
insert into tasks values (520, 3, 20, '', 520, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');


insert into answers values (601, null, sysdate, sysdate);
insert into tasks values (601, 6, 1, '', 601, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (602, null, sysdate, sysdate);
insert into tasks values (602, 6, 2, '', 602, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (603, null, sysdate, sysdate);
insert into tasks values (603, 6, 3, '', 603, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (604, null, sysdate, sysdate);
insert into tasks values (604, 6, 4, '', 604, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (605, null, sysdate, sysdate);
insert into tasks values (605, 6, 5, '', 605, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (606, null, sysdate, sysdate);
insert into tasks values (606, 6, 6, '', 606, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (607, null, sysdate, sysdate);
insert into tasks values (607, 6, 7, '', 607, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (608, null, sysdate, sysdate);
insert into tasks values (608, 6, 8, '', 608, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (609, null, sysdate, sysdate);
insert into tasks values (609, 6, 9, '', 609, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (610, null, sysdate, sysdate);
insert into tasks values (610, 6, 10, '', 610, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (611, null, sysdate, sysdate);
insert into tasks values (611, 6, 11, '', 611, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (612, null, sysdate, sysdate);
insert into tasks values (612, 6, 12, '', 612, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (613, null, sysdate, sysdate);
insert into tasks values (613, 6, 13, '', 613, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (614, null, sysdate, sysdate);
insert into tasks values (614, 6, 14, '', 614, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (615, null, sysdate, sysdate);
insert into tasks values (615, 6, 15, '', 615, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (616, null, sysdate, sysdate);
insert into tasks values (616, 6, 16, '', 616, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (617, null, sysdate, sysdate);
insert into tasks values (617, 6, 17, '', 617, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (618, null, sysdate, sysdate);
insert into tasks values (618, 6, 18, '', 618, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (619, null, sysdate, sysdate);
insert into tasks values (619, 6, 19, '', 619, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (620, null, sysdate, sysdate);
insert into tasks values (620, 6, 20, '', 620, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (220, null, sysdate, sysdate);
insert into tasks values (620, 6, 20, '', 620, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:21:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:21:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);


insert into answers values (101, 'select * from dual;', sysdate, sysdate);
insert into tasks values (101, 1, 1, 'Wykonaj swoje pierwsze zapytanie i zatwierdź kombinacją klawiszy Ctrl+Enter.', 101, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (102, 'SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=''PUBLIC'';', sysdate, sysdate);
insert into tasks values (102, 1, 2, 'Pokaż wszystkie tabele w schemacie ''PUBLIC'', używając poniższej składni SQL:', 102, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (103, null, sysdate, sysdate);
insert into tasks values (103, 1, 3, 'Utwórz schemat <swojenazwisko>_<nr albumu> za pomocą polecenia:
CREATE SCHEMA kowalski_123456;', 103, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (104, null, sysdate, sysdate);
insert into tasks values (104, 1, 4, 'Usuń schemat <swojenazwisko>_<nr albumu> za pomocą polecenia:
DROP SCHEMA kowalski_123456;
a następnie stwórz go ponownie:
CREATE SCHEMA kowalski_123456;', 104, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (105, null, sysdate, sysdate);
insert into tasks values (105, 1, 5, '<h4>Stwórz tabelę OSOBY zawierającą:
                <ul>
                    <li>definicję klucza głównego nr_osoby typu int,</li>
                    <li>imię – znakowy o 40 znakach,</li>
                    <li>nazwisko – analogicznie, adres znakowy o 500 znakach,</li>
                    <li>wiek int.</li>
                </ul>
            </h4>', 105, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (106, null, sysdate, sysdate);
insert into tasks values (106, 1, 6, 'Sprawdź, ile rekordów znajduje się w tabeli OSOBY.', 106, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (107, null, sysdate, sysdate);
insert into tasks values (107, 1, 7, '<h4>Wstaw do tabeli jeden rekord:
                <ul>
                    <li>imię: Baba,</li>
                    <li>nazwisko: Jaga,</li>
                    <li>adres: Domek z Piernika 100,</li>
                    <li>wiek 154.</li>
                </ul>
            </h4>', 107, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (108, null, sysdate, sysdate);
insert into tasks values (108, 1, 8, 'Wyświetl wszystkie rekordy z tabeli OSOBY.', 108, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (109, null, sysdate, sysdate);
insert into tasks values (109, 1, 9, 'Sprawdź ponownie, ile rekordów jest w tabeli OSOBY.', 109, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (110, null, sysdate, sysdate);
insert into tasks values (110, 1, 10, ' <h4>Utwórz drugą tabelę DZIECI o następującej strukturze:
                <ul>
                    <li>nr_dziecka; int przyrostowy od 100 co 1,</li>
                    <li>nr_osoby; int,</li>
                    <li>imie; znakowy do 40 znaków.</li>
                </ul>
            </h4>', 110, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (111, null, sysdate, sysdate);
insert into tasks values (111, 1, 11, '<h4>Wstaw do tabeli OSOBY jeden rekord:
                <ul>
                    <li>Baba Jaga</li>
                </ul>
            </h4>', 111, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (112, null, sysdate, sysdate);
insert into tasks values (112, 1, 12, '<h4>Wstaw do tabeli DZIECI dwa rekordy:
                <ul>
                    <li>Jaś</li>
                    <li>Małgosia</li>
                </ul>
            </h4>', 112, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (113, null, sysdate, sysdate);
insert into tasks values (113, 1, 13, 'Dodaj do tabeli OSOBY kolumnę data_wpisu zawierającą automatycznie datę wpisu rekordu.', 113, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (114, null, sysdate, sysdate);
insert into tasks values (114, 1, 14, '<h4>Wstaw do tabeli OSOBY kolejny rekord:
                <ul>
                    <li>imię: Matka,</li>
                    <li>nazwisko: Chrzestna,</li>
                    <li>adres Wróżkolandia,</li>
                    <li>wiek 105.</li>
                </ul>
            </h4>', 114, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (115, null, sysdate, sysdate);
insert into tasks values (115, 1, 15, 'Dopisz do tabeli DZIECI Kopciuszka tak, żeby jego id_dziecka = 10.', 115, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (116, null, sysdate, sysdate);
insert into tasks values (116, 1, 16, 'Załóż ograniczenie, które od tej pory nie pozwoli na wprowadzanie osób starszych niż 100 lat.', 116, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (117, null, sysdate, sysdate);
insert into tasks values (117, 1, 17, 'Sprawdź na przykładach, czy ograniczenie działa.', 117, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (118, 'HELP', sysdate, sysdate);
insert into tasks values (118, 1, 18, 'Wyświetl dokumentację bazy danych za pomocą polecenia: HELP', 118, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (201, null, sysdate, sysdate);
insert into tasks values (201, 2, 1, 'Utworzyć schemat o nazwie biblioteka_<nr albumu>.', 201, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (202, null, sysdate, sysdate);
insert into tasks values (202, 2, 2, '', 202, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (203, null, sysdate, sysdate);
insert into tasks values (203, 2, 3, '', 203, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (204, null, sysdate, sysdate);
insert into tasks values (204, 2, 4, '', 204, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (205, null, sysdate, sysdate);
insert into tasks values (205, 2, 5, '', 205, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (206, null, sysdate, sysdate);
insert into tasks values (206, 2, 6, '', 206, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (207, null, sysdate, sysdate);
insert into tasks values (207, 2, 7, '', 207, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (208, null, sysdate, sysdate);
insert into tasks values (208, 2, 8, '', 208, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (209, null, sysdate, sysdate);
insert into tasks values (209, 2, 9, '', 209, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (210, null, sysdate, sysdate);
insert into tasks values (210, 2, 10, '', 210, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (211, null, sysdate, sysdate);
insert into tasks values (211, 2, 11, '', 211, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (212, null, sysdate, sysdate);
insert into tasks values (212, 2, 12, '', 212, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (213, null, sysdate, sysdate);
insert into tasks values (213, 2, 13, '', 213, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (214, null, sysdate, sysdate);
insert into tasks values (214, 2, 14, '', 214, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (215, null, sysdate, sysdate);
insert into tasks values (215, 2, 15, '', 215, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (216, null, sysdate, sysdate);
insert into tasks values (216, 2, 16, '', 216, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (217, null, sysdate, sysdate);
insert into tasks values (217, 2, 17, '', 217, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (218, null, sysdate, sysdate);
insert into tasks values (218, 2, 18, '', 218, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (219, null, sysdate, sysdate);
insert into tasks values (219, 3, 19, '', 219, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (220, null, sysdate, sysdate);
insert into tasks values (220, 3, 20, '', 220, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', 301, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', 302, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', 303, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', 304, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', 305, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', 306, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);
insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', 307, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);
insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', 308, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);
insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', 309, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (310, 'select p.nazwisko||'' pracuje w dziale: ''||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);
insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', 310, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);
insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', 311, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);
insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', 312, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
   
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);
insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', 313, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);
insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', 314, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);
insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', 315, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);
insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', 316, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);
insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', 317, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);
insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', 318, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (401, null, sysdate, sysdate);
insert into tasks values (401, 4, 1, '', 401, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (402, null, sysdate, sysdate);
insert into tasks values (402, 4, 2, '', 402, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (403, null, sysdate, sysdate);
insert into tasks values (403, 4, 3, '', 403, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (404, null, sysdate, sysdate);
insert into tasks values (404, 4, 4, '', 404, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (405, null, sysdate, sysdate);
insert into tasks values (405, 4, 5, '', 405, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (406, null, sysdate, sysdate);
insert into tasks values (406, 4, 6, '', 406, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (407, null, sysdate, sysdate);
insert into tasks values (407, 4, 7, '', 407, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (408, null, sysdate, sysdate);
insert into tasks values (408, 4, 8, '', 408, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (409, null, sysdate, sysdate);
insert into tasks values (409, 4, 9, '', 409, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (410, null, sysdate, sysdate);
insert into tasks values (410, 4, 10, '', 410, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (411, null, sysdate, sysdate);
insert into tasks values (411, 4, 11, '', 411, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (412, null, sysdate, sysdate);
insert into tasks values (412, 4, 12, '', 412, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (413, null, sysdate, sysdate);
insert into tasks values (413, 4, 13, '', 413, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (414, null, sysdate, sysdate);
insert into tasks values (414, 4, 14, '', 414, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (415, null, sysdate, sysdate);
insert into tasks values (415, 4, 15, '', 415, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (416, null, sysdate, sysdate);
insert into tasks values (416, 4, 16, '', 416, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (417, null, sysdate, sysdate);
insert into tasks values (417, 4, 17, '', 417, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (418, null, sysdate, sysdate);
insert into tasks values (418, 4, 18, '', 418, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (419, null, sysdate, sysdate);
insert into tasks values (419, 4, 19, '', 419, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (420, null, sysdate, sysdate);
insert into tasks values (420, 4, 20, '', 420, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');


insert into answers values (501, null, sysdate, sysdate);
insert into tasks values (501, 5, 1, '', 501, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (502, null, sysdate, sysdate);
insert into tasks values (502, 5, 2, '', 502, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (503, null, sysdate, sysdate);
insert into tasks values (503, 5, 3, '', 503, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (504, null, sysdate, sysdate);
insert into tasks values (504, 5, 4, '', 504, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (505, null, sysdate, sysdate);
insert into tasks values (505, 5, 5, '', 505, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (506, null, sysdate, sysdate);
insert into tasks values (506, 5, 6, '', 506, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (507, null, sysdate, sysdate);
insert into tasks values (507, 5, 7, '', 507, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (508, null, sysdate, sysdate);
insert into tasks values (508, 5, 8, '', 508, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (509, null, sysdate, sysdate);
insert into tasks values (509, 5, 9, '', 509, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (510, null, sysdate, sysdate);
insert into tasks values (510, 5, 10, '', 510, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (511, null, sysdate, sysdate);
insert into tasks values (511, 5, 11, '', 511, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (512, null, sysdate, sysdate);
insert into tasks values (512, 5, 12, '', 512, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (513, null, sysdate, sysdate);
insert into tasks values (513, 5, 13, '', 513, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (514, null, sysdate, sysdate);
insert into tasks values (514, 5, 14, '', 514, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (515, null, sysdate, sysdate);
insert into tasks values (515, 5, 15, '', 515, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (516, null, sysdate, sysdate);
insert into tasks values (516, 5, 16, '', 516, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (517, null, sysdate, sysdate);
insert into tasks values (517, 5, 17, '', 517, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (518, null, sysdate, sysdate);
insert into tasks values (518, 5, 18, '', 518, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (519, null, sysdate, sysdate);
insert into tasks values (519, 5, 19, '', 519, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (520, null, sysdate, sysdate);
insert into tasks values (520, 5, 20, '', 520, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');


insert into answers values (601, null, sysdate, sysdate);
insert into tasks values (601, 6, 1, '', 601, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (602, null, sysdate, sysdate);
insert into tasks values (602, 6, 2, '', 602, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (603, null, sysdate, sysdate);
insert into tasks values (603, 6, 3, '', 603, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (604, null, sysdate, sysdate);
insert into tasks values (604, 6, 4, '', 604, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (605, null, sysdate, sysdate);
insert into tasks values (605, 6, 5, '', 605, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (606, null, sysdate, sysdate);
insert into tasks values (606, 6, 6, '', 606, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (607, null, sysdate, sysdate);
insert into tasks values (607, 6, 7, '', 607, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (608, null, sysdate, sysdate);
insert into tasks values (608, 6, 8, '', 608, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (609, null, sysdate, sysdate);
insert into tasks values (609, 6, 9, '', 609, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (610, null, sysdate, sysdate);
insert into tasks values (610, 6, 10, '', 610, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (611, null, sysdate, sysdate);
insert into tasks values (611, 6, 11, '', 611, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (612, null, sysdate, sysdate);
insert into tasks values (612, 6, 12, '', 612, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (613, null, sysdate, sysdate);
insert into tasks values (613, 6, 13, '', 613, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (614, null, sysdate, sysdate);
insert into tasks values (614, 6, 14, '', 614, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (615, null, sysdate, sysdate);
insert into tasks values (615, 6, 15, '', 615, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (616, null, sysdate, sysdate);
insert into tasks values (616, 6, 16, '', 616, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (617, null, sysdate, sysdate);
insert into tasks values (617, 6, 17, '', 617, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (618, null, sysdate, sysdate);
insert into tasks values (618, 6, 18, '', 618, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (619, null, sysdate, sysdate);
insert into tasks values (619, 6, 19, '', 619, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (620, null, sysdate, sysdate);
insert into tasks values (620, 6, 20, '', 620, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (220, null, sysdate, sysdate);
insert into tasks values (620, 6, 20, '', 620, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:21:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
drop table students if exists;
drop table tasks if exists;
drop table answers if exists;
drop table logs if exists;
drop table LOGIN_EVENTS if exists;
drop table logged_answers if exists;
drop SEQUENCE LOGS_SEQ_ID if exists;
drop SEQUENCE LOGGED_ANSWERS_SEQ_ID if exists;

CREATE CACHED TABLE PUBLIC.STUDENTS(
	ID INT NOT NULL,
	FIRST_NAME VARCHAR(100),
	LAST_NAME VARCHAR(100),
	DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
	LAST_SUCCESS_LOGIN DATETIME,
	LAST_ERROR_LOGIN DATETIME,
	STATUS VARCHAR(10),
	SALT VARCHAR(256),
	PASSWORD VARCHAR(256),
	ERROR_COUNTER INT 
);

ALTER TABLE students ADD CONSTRAINT students_id_pk PRIMARY KEY (id);

CREATE CACHED TABLE PUBLIC.TASKS(
 ID INT NOT NULL,
 SECTION INT NOT NULL,
 NUMBER INT NOT NULL,
 QUESTION VARCHAR(2000),
 ANSWER_ID INT,
 TYPE VARCHAR(10),
 AUTHOR VARCHAR(100),
 DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP(),
 DATE_MODIFIED DATETIME,
 QUESTION_VER VARCHAR(10),
 DATABASE_VENDOR VARCHAR(20),
 DATABASE_VER VARCHAR(20) 
 );
ALTER TABLE tasks ADD CONSTRAINT tasks_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_TASKS_ANSWER_ID ON tasks (answer_id);
CREATE UNIQUE INDEX IDX_TASKS_SECTION_NUMBER ON tasks (section, number);

CREATE CACHED TABLE PUBLIC.LOGS(
 ID INT NOT NULL,
 STUDENT_ID INT,
 SESSION_ID VARCHAR(100),
 CLIENT_ID VARCHAR(20),
 TASK_ID INT,
 ANSWER_ID INT,
 CORRECT VARCHAR(5),
 LOG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP() 
 );
ALTER TABLE logs ADD CONSTRAINT logs_log_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_LOGS_STUDENT_ID ON logs (student_id);
CREATE INDEX IDX_LOGS_SESSION_ID ON logs (session_id);
CREATE INDEX IDX_LOGS_TASK_ID ON logs (task_id);
CREATE INDEX IDX_LOGS_LOG_DATE ON logs (log_date);
CREATE INDEX IDX_LOGS_ANS_ID ON logs (answer_id);

create table public.login_events(
	id INT NOT NULL
	, student_id INT
	, session_id INT
	, login_date DATETIME
	, login_input VARCHAR(100)
	, success CHAR(1)
	, ip VARCHAR(40)
	, USER_AGENT VARCHAR(500)
);
ALTER TABLE login_events ADD CONSTRAINT login_events_id_pk PRIMARY KEY (id);
CREATE INDEX IDX_login_events_student_id ON login_events (student_id);
CREATE INDEX IDX_login_events_session_id ON login_events (session_id);
CREATE INDEX IDX_login_events_login_date ON login_events (login_date);

create table public.answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
	, DATE_CREATED DATETIME DEFAULT CURRENT_TIMESTAMP()
	, DATE_MODIFIED DATETIME
);
ALTER TABLE answers ADD CONSTRAINT answers_id_pk PRIMARY KEY (id);
ALTER TABLE tasks ADD CONSTRAINT tasks_answer_fk FOREIGN KEY (answer_id) REFERENCES answers(id);
CREATE SEQUENCE LOGS_SEQ_ID;
CREATE SEQUENCE LOGGED_ANSWERS_SEQ_ID;


create table public.logged_answers (
	id INT NOT NULL
	, answer VARCHAR(2000)
);
ALTER TABLE logged_answers ADD CONSTRAINT logged_answers_pk PRIMARY KEY (id);
ALTER TABLE logs ADD CONSTRAINT logs_answer_fk FOREIGN KEY (answer_id) REFERENCES logged_answers (id);

grant select on students to STUDENT;
grant select on tasks to STUDENT;
grant select on logs to STUDENT;
grant select on login_events to STUDENT; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:22:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO PUBLIC.STUDENTS(ID, FIRST_NAME, LAST_NAME, DATE_CREATED, LAST_SUCCESS_LOGIN, LAST_ERROR_LOGIN, STATUS, SALT, PASSWORD, ERROR_COUNTER) VALUES (183566, STRINGDECODE('\u0141ukasz'), STRINGDECODE('Ochma\u0144ski'), TIMESTAMP '2015-02-03 00:04:44.356', TIMESTAMP '2015-01-03 00:07:53.086', TIMESTAMP '2014-11-03 00:08:05.127', 'ACTIVE', '6dd5c1e4-ab2f-11e4-89d3-123b93f75cba', '7B7C2F32BED0AD20BCD9985751B4C3C1A44F5080888A87B9A011850CC4731E3C', 0);


insert into answers values (101, 'select * from dual;', sysdate, sysdate);
insert into tasks values (101, 1, 1, 'Wykonaj swoje pierwsze zapytanie i zatwierdź kombinacją klawiszy Ctrl+Enter.', 101, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (102, 'SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=''PUBLIC'';', sysdate, sysdate);
insert into tasks values (102, 1, 2, 'Pokaż wszystkie tabele w schemacie ''PUBLIC'', używając poniższej składni SQL:', 102, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (103, null, sysdate, sysdate);
insert into tasks values (103, 1, 3, 'Utwórz schemat <swojenazwisko>_<nr albumu> za pomocą polecenia:
CREATE SCHEMA kowalski_123456;', 103, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (104, null, sysdate, sysdate);
insert into tasks values (104, 1, 4, 'Usuń schemat <swojenazwisko>_<nr albumu> za pomocą polecenia:
DROP SCHEMA kowalski_123456;
a następnie stwórz go ponownie:
CREATE SCHEMA kowalski_123456;', 104, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (105, null, sysdate, sysdate);
insert into tasks values (105, 1, 5, '<h4>Stwórz tabelę OSOBY zawierającą:
                <ul>
                    <li>definicję klucza głównego nr_osoby typu int,</li>
                    <li>imię – znakowy o 40 znakach,</li>
                    <li>nazwisko – analogicznie, adres znakowy o 500 znakach,</li>
                    <li>wiek int.</li>
                </ul>
            </h4>', 105, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (106, null, sysdate, sysdate);
insert into tasks values (106, 1, 6, 'Sprawdź, ile rekordów znajduje się w tabeli OSOBY.', 106, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (107, null, sysdate, sysdate);
insert into tasks values (107, 1, 7, '<h4>Wstaw do tabeli jeden rekord:
                <ul>
                    <li>imię: Baba,</li>
                    <li>nazwisko: Jaga,</li>
                    <li>adres: Domek z Piernika 100,</li>
                    <li>wiek 154.</li>
                </ul>
            </h4>', 107, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (108, null, sysdate, sysdate);
insert into tasks values (108, 1, 8, 'Wyświetl wszystkie rekordy z tabeli OSOBY.', 108, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (109, null, sysdate, sysdate);
insert into tasks values (109, 1, 9, 'Sprawdź ponownie, ile rekordów jest w tabeli OSOBY.', 109, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (110, null, sysdate, sysdate);
insert into tasks values (110, 1, 10, ' <h4>Utwórz drugą tabelę DZIECI o następującej strukturze:
                <ul>
                    <li>nr_dziecka; int przyrostowy od 100 co 1,</li>
                    <li>nr_osoby; int,</li>
                    <li>imie; znakowy do 40 znaków.</li>
                </ul>
            </h4>', 110, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (111, null, sysdate, sysdate);
insert into tasks values (111, 1, 11, '<h4>Wstaw do tabeli OSOBY jeden rekord:
                <ul>
                    <li>Baba Jaga</li>
                </ul>
            </h4>', 111, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (112, null, sysdate, sysdate);
insert into tasks values (112, 1, 12, '<h4>Wstaw do tabeli DZIECI dwa rekordy:
                <ul>
                    <li>Jaś</li>
                    <li>Małgosia</li>
                </ul>
            </h4>', 112, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (113, null, sysdate, sysdate);
insert into tasks values (113, 1, 13, 'Dodaj do tabeli OSOBY kolumnę data_wpisu zawierającą automatycznie datę wpisu rekordu.', 113, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (114, null, sysdate, sysdate);
insert into tasks values (114, 1, 14, '<h4>Wstaw do tabeli OSOBY kolejny rekord:
                <ul>
                    <li>imię: Matka,</li>
                    <li>nazwisko: Chrzestna,</li>
                    <li>adres Wróżkolandia,</li>
                    <li>wiek 105.</li>
                </ul>
            </h4>', 114, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (115, null, sysdate, sysdate);
insert into tasks values (115, 1, 15, 'Dopisz do tabeli DZIECI Kopciuszka tak, żeby jego id_dziecka = 10.', 115, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (116, null, sysdate, sysdate);
insert into tasks values (116, 1, 16, 'Załóż ograniczenie, które od tej pory nie pozwoli na wprowadzanie osób starszych niż 100 lat.', 116, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (117, null, sysdate, sysdate);
insert into tasks values (117, 1, 17, 'Sprawdź na przykładach, czy ograniczenie działa.', 117, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (118, 'HELP', sysdate, sysdate);
insert into tasks values (118, 1, 18, 'Wyświetl dokumentację bazy danych za pomocą polecenia: HELP', 118, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (201, null, sysdate, sysdate);
insert into tasks values (201, 2, 1, 'Utworzyć schemat o nazwie biblioteka_<nr albumu>.', 201, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (202, null, sysdate, sysdate);
insert into tasks values (202, 2, 2, '', 202, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (203, null, sysdate, sysdate);
insert into tasks values (203, 2, 3, '', 203, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (204, null, sysdate, sysdate);
insert into tasks values (204, 2, 4, '', 204, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (205, null, sysdate, sysdate);
insert into tasks values (205, 2, 5, '', 205, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (206, null, sysdate, sysdate);
insert into tasks values (206, 2, 6, '', 206, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (207, null, sysdate, sysdate);
insert into tasks values (207, 2, 7, '', 207, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (208, null, sysdate, sysdate);
insert into tasks values (208, 2, 8, '', 208, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (209, null, sysdate, sysdate);
insert into tasks values (209, 2, 9, '', 209, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (210, null, sysdate, sysdate);
insert into tasks values (210, 2, 10, '', 210, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (211, null, sysdate, sysdate);
insert into tasks values (211, 2, 11, '', 211, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (212, null, sysdate, sysdate);
insert into tasks values (212, 2, 12, '', 212, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (213, null, sysdate, sysdate);
insert into tasks values (213, 2, 13, '', 213, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (214, null, sysdate, sysdate);
insert into tasks values (214, 2, 14, '', 214, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (215, null, sysdate, sysdate);
insert into tasks values (215, 2, 15, '', 215, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (216, null, sysdate, sysdate);
insert into tasks values (216, 2, 16, '', 216, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (217, null, sysdate, sysdate);
insert into tasks values (217, 2, 17, '', 217, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (218, null, sysdate, sysdate);
insert into tasks values (218, 2, 18, '', 218, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (219, null, sysdate, sysdate);
insert into tasks values (219, 3, 19, '', 219, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (220, null, sysdate, sysdate);
insert into tasks values (220, 3, 20, '', 220, 'CREATE', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', 301, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', 302, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', 303, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', 304, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', 305, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', 306, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);
insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', 307, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);
insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', 308, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);
insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', 309, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (310, 'select p.nazwisko||'' pracuje w dziale: ''||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);
insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', 310, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);
insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', 311, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);
insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', 312, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
   
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);
insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', 313, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);
insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', 314, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);
insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', 315, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);
insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', 316, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t);', sysdate, sysdate);
insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', 317, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);
insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', 318, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (401, null, sysdate, sysdate);
insert into tasks values (401, 4, 1, '', 401, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (402, null, sysdate, sysdate);
insert into tasks values (402, 4, 2, '', 402, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (403, null, sysdate, sysdate);
insert into tasks values (403, 4, 3, '', 403, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (404, null, sysdate, sysdate);
insert into tasks values (404, 4, 4, '', 404, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (405, null, sysdate, sysdate);
insert into tasks values (405, 4, 5, '', 405, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (406, null, sysdate, sysdate);
insert into tasks values (406, 4, 6, '', 406, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (407, null, sysdate, sysdate);
insert into tasks values (407, 4, 7, '', 407, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (408, null, sysdate, sysdate);
insert into tasks values (408, 4, 8, '', 408, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (409, null, sysdate, sysdate);
insert into tasks values (409, 4, 9, '', 409, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (410, null, sysdate, sysdate);
insert into tasks values (410, 4, 10, '', 410, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (411, null, sysdate, sysdate);
insert into tasks values (411, 4, 11, '', 411, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (412, null, sysdate, sysdate);
insert into tasks values (412, 4, 12, '', 412, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (413, null, sysdate, sysdate);
insert into tasks values (413, 4, 13, '', 413, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (414, null, sysdate, sysdate);
insert into tasks values (414, 4, 14, '', 414, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (415, null, sysdate, sysdate);
insert into tasks values (415, 4, 15, '', 415, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (416, null, sysdate, sysdate);
insert into tasks values (416, 4, 16, '', 416, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (417, null, sysdate, sysdate);
insert into tasks values (417, 4, 17, '', 417, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (418, null, sysdate, sysdate);
insert into tasks values (418, 4, 18, '', 418, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (419, null, sysdate, sysdate);
insert into tasks values (419, 4, 19, '', 419, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (420, null, sysdate, sysdate);
insert into tasks values (420, 4, 20, '', 420, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');


insert into answers values (501, null, sysdate, sysdate);
insert into tasks values (501, 5, 1, '', 501, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (502, null, sysdate, sysdate);
insert into tasks values (502, 5, 2, '', 502, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (503, null, sysdate, sysdate);
insert into tasks values (503, 5, 3, '', 503, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (504, null, sysdate, sysdate);
insert into tasks values (504, 5, 4, '', 504, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (505, null, sysdate, sysdate);
insert into tasks values (505, 5, 5, '', 505, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (506, null, sysdate, sysdate);
insert into tasks values (506, 5, 6, '', 506, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (507, null, sysdate, sysdate);
insert into tasks values (507, 5, 7, '', 507, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (508, null, sysdate, sysdate);
insert into tasks values (508, 5, 8, '', 508, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (509, null, sysdate, sysdate);
insert into tasks values (509, 5, 9, '', 509, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (510, null, sysdate, sysdate);
insert into tasks values (510, 5, 10, '', 510, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (511, null, sysdate, sysdate);
insert into tasks values (511, 5, 11, '', 511, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (512, null, sysdate, sysdate);
insert into tasks values (512, 5, 12, '', 512, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (513, null, sysdate, sysdate);
insert into tasks values (513, 5, 13, '', 513, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (514, null, sysdate, sysdate);
insert into tasks values (514, 5, 14, '', 514, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (515, null, sysdate, sysdate);
insert into tasks values (515, 5, 15, '', 515, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (516, null, sysdate, sysdate);
insert into tasks values (516, 5, 16, '', 516, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (517, null, sysdate, sysdate);
insert into tasks values (517, 5, 17, '', 517, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (518, null, sysdate, sysdate);
insert into tasks values (518, 5, 18, '', 518, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (519, null, sysdate, sysdate);
insert into tasks values (519, 5, 19, '', 519, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (520, null, sysdate, sysdate);
insert into tasks values (520, 5, 20, '', 520, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');


insert into answers values (601, null, sysdate, sysdate);
insert into tasks values (601, 6, 1, '', 601, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (602, null, sysdate, sysdate);
insert into tasks values (602, 6, 2, '', 602, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (603, null, sysdate, sysdate);
insert into tasks values (603, 6, 3, '', 603, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (604, null, sysdate, sysdate);
insert into tasks values (604, 6, 4, '', 604, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (605, null, sysdate, sysdate);
insert into tasks values (605, 6, 5, '', 605, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (606, null, sysdate, sysdate);
insert into tasks values (606, 6, 6, '', 606, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (607, null, sysdate, sysdate);
insert into tasks values (607, 6, 7, '', 607, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (608, null, sysdate, sysdate);
insert into tasks values (608, 6, 8, '', 608, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (609, null, sysdate, sysdate);
insert into tasks values (609, 6, 9, '', 609, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (610, null, sysdate, sysdate);
insert into tasks values (610, 6, 10, '', 610, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (611, null, sysdate, sysdate);
insert into tasks values (611, 6, 11, '', 611, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (612, null, sysdate, sysdate);
insert into tasks values (612, 6, 12, '', 612, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (613, null, sysdate, sysdate);
insert into tasks values (613, 6, 13, '', 613, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (614, null, sysdate, sysdate);
insert into tasks values (614, 6, 14, '', 614, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (615, null, sysdate, sysdate);
insert into tasks values (615, 6, 15, '', 615, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (616, null, sysdate, sysdate);
insert into tasks values (616, 6, 16, '', 616, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (617, null, sysdate, sysdate);
insert into tasks values (617, 6, 17, '', 617, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (618, null, sysdate, sysdate);
insert into tasks values (618, 6, 18, '', 618, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (619, null, sysdate, sysdate);
insert into tasks values (619, 6, 19, '', 619, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (620, null, sysdate, sysdate);
insert into tasks values (620, 6, 20, '', 620, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (620, null, sysdate, sysdate);
insert into tasks values (620, 6, 20, '', 620, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$d9f109a2.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:40:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "QUESTIONS" not found; SQL statement:
update tasks set question=null where questions=''; [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:178)
	at org.h2.command.dml.Update.prepare(Update.java:181)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$f3439f06.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:40:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set question=null where question=''; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$f3439f06.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:40:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TAKSK" not found; SQL statement:
select * from taksk [42102-182]
02-06 23:41:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "QUESTIONS" not found; SQL statement:
select * from tasks where type<>'QUERY' and questions is null [42122-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:178)
	at org.h2.expression.ConditionAndOr.optimize(ConditionAndOr.java:131)
	at org.h2.command.dml.Select.prepare(Select.java:832)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$f3439f06.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
02-06 23:43:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT * FROM TASKS T
LEFT JOIN ANSWERS A T[*].ANSWER_ID=A.ID
 WHERE TYPE<>'QUERY' AND QUESTION IS NOT NULL "; SQL statement:
select * from tasks t
left join answers a t.answer_id=a.id
 where type<>'QUERY' and question is not null [42000-182]
02-06 23:44:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT T.ID, T.QUESTION, T.TYPE, A.ANSWER FROM TASKS T
LEFT JOIN ANSWERS A T[*].ANSWER_ID=A.ID
WHERE TYPE<>'QUERY' AND T.QUESTION IS NOT NULL "; SQL statement:
select t.id, t.question, t.type, a.answer from tasks t
left join answers a t.answer_id=a.id
where type<>'QUERY' and t.question is not null [42000-182]
02-06 23:44:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT T.ID, T.QUESTION, T.TYPE, A.ANSWER FROM TASKS T
LEFT JOIN ANSWERS A T[*].ANSWER_ID=A.ID
                                               l "; SQL statement:
select t.id, t.question, t.type, a.answer from tasks t
left join answers a t.answer_id=a.id
--where type<>'QUERY' and t.question is not null [42000-182]
02-06 23:44:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT T.ID                                
FROM TASKS T
LEFT JOIN ANSWERS A T[*].ANSWER_ID=A.ID
                                               l "; SQL statement:
select t.id--, t.question, t.type, a.answer
from tasks t
left join answers a t.answer_id=a.id
--where type<>'QUERY' and t.question is not null [42000-182]
02-06 23:45:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ANSWER" not found; SQL statement:
select t.id--, t.question, t.type, a.answer
from tasks t
left join answer a t.answer_id=a.id
--where type<>'QUERY' and t.question is not null [42102-182]
02-06 23:45:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT T.ID                                
FROM TASKS T
LEFT JOIN ANSWERS A T[*].ANSWER_ID=A.ID
                                               l "; SQL statement:
select t.id--, t.question, t.type, a.answer
from tasks t
left join answers a t.answer_id=a.id
--where type<>'QUERY' and t.question is not null [42000-182]
02-07 00:23:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO LOGGED_ANSWERS VALUES (3, 'SELECT TABLE_SCHEMA, TABLE_NAME
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA='PUBLIC[*]'; '); "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into logged_answers values (3, 'SELECT TABLE_SCHEMA, TABLE_NAME
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA='PUBLIC'; '); [42001-182]
02-07 00:55:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO LOGGED_ANSWERS VALUES (4, 'SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='PUBLIC[*]';'); "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into logged_answers values (4, 'SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='PUBLIC';'); [42001-182]
03-09 11:01:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from answers where id>400 and id<500 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$a3c73478.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-09 11:04:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from tasks where id>400 and id<500 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$a3c73478.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-09 11:04:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from answers where id>400 and id<500 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$a3c73478.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-09 11:15:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (401, 'SELECT ''SELECT * FROM '' || TABLE_SCHEMA ||''.''|| TABLE_NAME
FROM INFORMATION_SCHEMA.TABLES
where table_schema=''TEST_PRACOWNICY'';', sysdate, sysdate);
insert into tasks values (401, 4, 1, 'Przygotuj sobie skrypt, który pomoże ci w przyszłości odnajdywać informacje zawarte we wszystkich tabelach danego schematu. Aby uzyskać pełną liczbę punktów za to zadanie wyświetl wszystkie tabele schematu TEST_PRACOWNICY w poniższym formacie: select * from nazwa_schematu.nazwa_tabeli', 401, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (402, 'select p.nr_akt, d.nazwa, d.siedziba
from test_pracownicy.pracownicy p
natural join test_pracownicy.dzialy d;', sysdate, sysdate);
insert into tasks values (402, 4, 2, 'Podaj NR_AKT pracownika oraz nazwę działu i siedzibę działu. Jeśli pracownik nie ma działu nie wyświetlaj tego pracownika.', 402, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (403, 'select p1.nr_akt, p2.nazwisko
from test_pracownicy.pracownicy p1
join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt;', sysdate, sysdate);
insert into tasks values (403, 4, 3, 'Podaj NR_AKT pracownika oraz nazwisko kierownika. Jeśli pracownik nie ma kierownika nie wyświetlaj tego pracownika.', 403, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (404, 'select p1.nr_akt, d1.nazwa, p2.nazwisko, d2.nazwa
from test_pracownicy.pracownicy p1
join test_pracownicy.dzialy d1 on p1.id_dzialu=d1.id_dzialu
join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt
join test_pracownicy.dzialy d2 on p2.id_dzialu=d2.id_dzialu;', sysdate, sysdate);
insert into tasks values (404, 4, 4, 'Podaj NR_AKT pracownika, nazwę działu tego pracownika, nazwisko kierownika, nazwę działu tego kierownika. Jeśli pracownik nie ma kierownika nie wyświetlaj tego pracownika. Jeśli pracownik nie ma działu nie wyświetlaj tego pracownika.', 404, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (405, 'select p2.nazwisko
from test_pracownicy.pracownicy p1
join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt;', sysdate, sysdate);
insert into tasks values (405, 4, 5, '<h4>Podaj nazwiska pracowników, którzy są kierownikami.</h4>', 405, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (406, 'select p.nr_akt, d.nazwa, d.siedziba
from test_pracownicy.pracownicy p
left join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);
insert into tasks values (406, 4, 6, '<h4>Podaj NR_AKT pracownika oraz nazwę działu i siedzibę działu. W zestawieniu uwzględnij również pracowników, których dział nie istnieje lub nie jest podany.</h4>', 406, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (407, 'select p1.nr_akt, p2.nazwisko
from test_pracownicy.pracownicy p1
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt;', sysdate, sysdate);
insert into tasks values (407, 4, 7, '<h4>Podaj NR_AKT pracownika oraz nazwisko kierownika. W zestawieniu uwzględnij również pracowników, których kierownik nie istnieje lub nie jest podany.</h4>', 407, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (408, 'select p1.nr_akt, d1.nazwa, p2.nazwisko, d2.nazwa
from test_pracownicy.pracownicy p1
left join test_pracownicy.dzialy d1 on p1.id_dzialu=d1.id_dzialu
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt
left join test_pracownicy.dzialy d2 on p2.id_dzialu=d2.id_dzialu;', sysdate, sysdate);
insert into tasks values (408, 4, 8, '<h4>Podaj NR_AKT pracownika, nazwę działu tego pracownika, nazwisko kierownika, nazwę działu tego kierownika.
                W zestawieniu uwzględnij również pracowników, których kierownik nie istnieje lub nie jest podany.
                W zestawieniu uwzględnij również pracowników, których dział nie istnieje lub nie jest podany.
                W zestawieniu uwzględnij również kierowników, których dział nie istnieje lub nie jest podany.</h4>', 408, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (409, 'select p1.nr_akt, d1.nazwa, p2.nazwisko, d2.nazwa
from test_pracownicy.pracownicy p1
left join test_pracownicy.dzialy d1 on p1.id_dzialu=d1.id_dzialu
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt
join test_pracownicy.dzialy d2 on p2.id_dzialu=d2.id_dzialu;', sysdate, sysdate);
insert into tasks values (409, 4, 9, '<h4>Podaj NR_AKT pracownika, nazwę działu tego pracownika, nazwisko kierownika, nazwę działu tego kierownika.
                W zestawieniu uwzględnij również pracowników, których kierownik nie istnieje lub nie jest podany.
                W zestawieniu uwzględnij również pracowników, których dział nie istnieje lub nie jest podany.
                W zestawieniu <b>nie</b> uwzględniaj kierowników, których dział nie istnieje lub nie jest podany.</h4>', 409, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (410, 'select * from test_pracownicy.pracownicy p1
where nr_akt not in (
select kierownik from test_pracownicy.pracownicy p2 where kierownik is not null
);', sysdate, sysdate);
insert into tasks values (410, 4, 10, '<h4>Podaj nazwiska pracowników, którzy nie są kierownikami.</h4>', 410, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (411, 'select p1.kierownik, p2.nr_akt from test_pracownicy.pracownicy p1
join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt
where p2.nr_akt is null;', sysdate, sysdate);
insert into tasks values (411, 4, 11, '<h4>Podaj nazwiska kierowników, którym nie podlega żaden pracownik.</h4>', 411, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (412, 'select nazwisko from test_pracownicy.pracownicy
union all
select nazwisko from test_pracownicy.prac_archiw;', sysdate, sysdate);
insert into tasks values (412, 4, 12, '<h4>Podaj nazwiska wszystkich pracowników aktualnie pracujących i tych którzy zostali zwolnieni.</h4>', 412, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (413, 'select nazwisko from test_pracownicy.pracownicy
union
select nazwisko from test_pracownicy.prac_archiw;', sysdate, sysdate);
insert into tasks values (413, 4, 13, '<h4>Podaj nazwiska wszystkich pracowników aktualnie pracujących i tych którzy zostali zwolnieni. Wyeliminuj powtórzenia.</h4>', 413, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (414, 'select p.nr_akt, p.stanowisko, s.placa_min, s.placa_max
from test_pracownicy.pracownicy p
left join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko;', sysdate, sysdate);
insert into tasks values (414, 4, 14, '<h4>Podaj NR_AKT pracownika, stanowisko, płacę minimalną i płace maksymalną dla danego stanowiska.</h4>', 414, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (415, 'select p.nazwisko, d.nazwa
from test_pracownicy.pracownicy p
right join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);
insert into tasks values (415, 4, 15, '<h4>Podaj nazwiska pracowników i nazwę działu w których pracują. W zestawieniu uwzględnij również działy które, nie mają żadnego pracownika.</h4>', 415, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (416, 'select p.nazwisko, d.nazwa, d.siedziba from test_pracownicy.pracownicy p
left join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu and d.siedziba=''CZESTOCHOWA'';', sysdate, sysdate);
insert into tasks values (416, 4, 16, '<h4>Podaj nazwiska wszystkich pracowników, a w kolumnie obok podaj nazwy i siedziby działów
                Nazwa działu ma się pojawić wtedy i tylko wtedy gdy siedziba jest w Częstochowie.</h4>
            <h5>*Uwaga na wielkość liter i polskie znaki w nazwie miejscowości.</h5>', 416, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (417, 'select p.nazwisko, d.nazwa, d.siedziba from test_pracownicy.pracownicy p
left join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu and d.siedziba<>''CZESTOCHOWA'';', sysdate, sysdate);
insert into tasks values (417, 4, 17, '<h4>Podaj nazwiska wszystkich pracowników, a w kolumnie obok podaj nazwy i siedziby działów
                Nazwa działu ma sie pojawić wtedy i tylko wtedy, gdy siedziba <b>NIE</b> jest w Częstochowie.</h4>
            <h5>*Uwaga na wielkość liter i polskie znaki w nazwie miejscowości.</h5>', 417, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (418, 'select nazwisko, s.placa_min, s.placa_max
from test_pracownicy.pracownicy p
left join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko and (p.placa+IFNULL(p.dod_funkcyjny, 0))<=s.placa_max;', sysdate, sysdate);
insert into tasks values (418, 4, 18, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj ich minimalną i maksymalną płacę.
                Wartości płac mają się pojawić wtedy i tylko wtedy gdy płaca + dodatek funkcyjny nie przekracza
                maksymalnej wartości zarobków dla tego stanowiska.</h4>', 418, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (419, 'select nazwisko, s.placa_min, s.placa_max
from test_pracownicy.pracownicy p
left join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko and (p.placa+IFNULL(p.dod_funkcyjny, 0))<=s.placa_max
where p.prowizja is null;', sysdate, sysdate);
insert into tasks values (419, 4, 19, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj ich minimalną i maksymalną płacę.
                Płaca ma się pojawić wtedy i tylko wtedy gdy płaca + dodatek funkcyjny nie przekracza maksymlanej
                wartości zarobków dla tego stanowiska.
                W zestawieniu uwzględnij tylko nazwiska osób, które nie pobierają prowizji.
                Jeśli ktoś dostaje prowizję nie wyświetlaj nawet jego nazwiska.</h4>', 419, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (420, 'select p1.nazwisko, p2.nazwisko as kierownik, p2.data_zatr, DATE '1990-01-01'
from test_pracownicy.pracownicy p1
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt and p2.data_zatr<DATE '1990-01-01'
where p1.data_zatr<DATE '1997-01-01'
order by nazwisko;', sysdate, sysdate);
insert into tasks values (420, 4, 20, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj nazwisko kierownika.
                Płaca ma się pojawić wtedy i tylko wtedy gdy kierownik został zatrudniony przed 1990 rokiem.
                W zestawieniu uwzględnij tylko pracowników, którzy zostali zatrudnieni przed 1997 rokiem.
                Jeśli pracownik został zatrudniony przed 1997 rokiem nie wyświetlaj tej krotki.
                Zestawienie posortuj po nazwisku pracownika w kolejności rosnącej alfabetycznie.
            </h4>', 420, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$a3c73478.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-09 11:15:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "

INSERT INTO ANSWERS VALUES (420, 'select p1.nazwisko, p2.nazwisko as kierownik, p2.data_zatr, DATE '1990[*]-01-01'
from test_pracownicy.pracownicy p1
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt and p2.data_zatr<DATE '1990-01-01'
where p1.data_zatr<DATE '1997-01-01'
order by nazwisko;', SYSDATE, SYSDATE);
INSERT INTO TASKS VALUES (420, 4, 20, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj nazwisko kierownika.
                Płaca ma się pojawić wtedy i tylko wtedy gdy kierownik został zatrudniony przed 1990 rokiem.
                W zestawieniu uwzględnij tylko pracowników, którzy zostali zatrudnieni przed 1997 rokiem.
                Jeśli pracownik został zatrudniony przed 1997 rokiem nie wyświetlaj tej krotki.
                Zestawienie posortuj po nazwisku pracownika w kolejności rosnącej alfabetycznie.
            </h4>', 420, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:


insert into answers values (420, 'select p1.nazwisko, p2.nazwisko as kierownik, p2.data_zatr, DATE '1990-01-01'
from test_pracownicy.pracownicy p1
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt and p2.data_zatr<DATE '1990-01-01'
where p1.data_zatr<DATE '1997-01-01'
order by nazwisko;', sysdate, sysdate);
insert into tasks values (420, 4, 20, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj nazwisko kierownika.
                Płaca ma się pojawić wtedy i tylko wtedy gdy kierownik został zatrudniony przed 1990 rokiem.
                W zestawieniu uwzględnij tylko pracowników, którzy zostali zatrudnieni przed 1997 rokiem.
                Jeśli pracownik został zatrudniony przed 1997 rokiem nie wyświetlaj tej krotki.
                Zestawienie posortuj po nazwisku pracownika w kolejności rosnącej alfabetycznie.
            </h4>', 420, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [42001-182]
03-09 11:15:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (420, 4, 20, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj nazwisko kierownika.
                Płaca ma się pojawić wtedy i tylko wtedy gdy kierownik został zatrudniony przed 1990 rokiem.
                W zestawieniu uwzględnij tylko pracowników, którzy zostali zatrudnieni przed 1997 rokiem.
                Jeśli pracownik został zatrudniony przed 1997 rokiem nie wyświetlaj tej krotki.
                Zestawienie posortuj po nazwisku pracownika w kolejności rosnącej alfabetycznie.
            </h4>', 420, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$a3c73478.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-09 11:17:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from answers where id=420 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$a3c73478.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-09 11:17:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ANSWERS VALUES (420, 'select p1.nazwisko, p2.nazwisko as kierownik, p2.data_zatr, DATE '1990[*]-01-01'
from test_pracownicy.pracownicy p1
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt and p2.data_zatr<DATE '1990-01-01'
where p1.data_zatr<DATE '1997-01-01'
order by nazwisko;', SYSDATE, SYSDATE);
INSERT INTO TASKS VALUES (420, 4, 20, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj nazwisko kierownika.
                Płaca ma się pojawić wtedy i tylko wtedy gdy kierownik został zatrudniony przed 1990 rokiem.
                W zestawieniu uwzględnij tylko pracowników, którzy zostali zatrudnieni przed 1997 rokiem.
                Jeśli pracownik został zatrudniony przed 1997 rokiem nie wyświetlaj tej krotki.
                Zestawienie posortuj po nazwisku pracownika w kolejności rosnącej alfabetycznie.
            </h4>', 420, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into answers values (420, 'select p1.nazwisko, p2.nazwisko as kierownik, p2.data_zatr, DATE '1990-01-01'
from test_pracownicy.pracownicy p1
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt and p2.data_zatr<DATE '1990-01-01'
where p1.data_zatr<DATE '1997-01-01'
order by nazwisko;', sysdate, sysdate);
insert into tasks values (420, 4, 20, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj nazwisko kierownika.
                Płaca ma się pojawić wtedy i tylko wtedy gdy kierownik został zatrudniony przed 1990 rokiem.
                W zestawieniu uwzględnij tylko pracowników, którzy zostali zatrudnieni przed 1997 rokiem.
                Jeśli pracownik został zatrudniony przed 1997 rokiem nie wyświetlaj tej krotki.
                Zestawienie posortuj po nazwisku pracownika w kolejności rosnącej alfabetycznie.
            </h4>', 420, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [42001-182]
03-09 11:17:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ANSWERS VALUES (420, 'select p1.nazwisko, p2.nazwisko as kierownik, p2.data_zatr, DATE ''1990-01-01''
from test_pracownicy.pracownicy p1
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt and p2.data_zatr<DATE ''1990-01-01''
where p1.data_zatr<DATE '1997[*]-01-01'
order by nazwisko;', SYSDATE, SYSDATE);
INSERT INTO TASKS VALUES (420, 4, 20, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj nazwisko kierownika.
                Płaca ma się pojawić wtedy i tylko wtedy gdy kierownik został zatrudniony przed 1990 rokiem.
                W zestawieniu uwzględnij tylko pracowników, którzy zostali zatrudnieni przed 1997 rokiem.
                Jeśli pracownik został zatrudniony przed 1997 rokiem nie wyświetlaj tej krotki.
                Zestawienie posortuj po nazwisku pracownika w kolejności rosnącej alfabetycznie.
            </h4>', 420, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into answers values (420, 'select p1.nazwisko, p2.nazwisko as kierownik, p2.data_zatr, DATE ''1990-01-01''
from test_pracownicy.pracownicy p1
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt and p2.data_zatr<DATE ''1990-01-01''
where p1.data_zatr<DATE '1997-01-01'
order by nazwisko;', sysdate, sysdate);
insert into tasks values (420, 4, 20, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj nazwisko kierownika.
                Płaca ma się pojawić wtedy i tylko wtedy gdy kierownik został zatrudniony przed 1990 rokiem.
                W zestawieniu uwzględnij tylko pracowników, którzy zostali zatrudnieni przed 1997 rokiem.
                Jeśli pracownik został zatrudniony przed 1997 rokiem nie wyświetlaj tej krotki.
                Zestawienie posortuj po nazwisku pracownika w kolejności rosnącej alfabetycznie.
            </h4>', 420, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [42001-182]
03-09 11:18:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (420, 'select p1.nazwisko, p2.nazwisko as kierownik
from test_pracownicy.pracownicy p1
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt and p2.data_zatr<DATE ''1990-01-01''
where p1.data_zatr<DATE ''1997-01-01''
order by nazwisko;', sysdate, sysdate);
insert into tasks values (420, 4, 20, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj nazwisko kierownika.
                Płaca ma się pojawić wtedy i tylko wtedy gdy kierownik został zatrudniony przed 1990 rokiem.
                W zestawieniu uwzględnij tylko pracowników, którzy zostali zatrudnieni przed 1997 rokiem.
                Jeśli pracownik został zatrudniony przed 1997 rokiem nie wyświetlaj tej krotki.
                Zestawienie posortuj po nazwisku pracownika w kolejności rosnącej alfabetycznie.
            </h4>', 420, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$a3c73478.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-09 11:18:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into tasks values (420, 4, 20, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj nazwisko kierownika.
                Płaca ma się pojawić wtedy i tylko wtedy gdy kierownik został zatrudniony przed 1990 rokiem.
                W zestawieniu uwzględnij tylko pracowników, którzy zostali zatrudnieni przed 1997 rokiem.
                Jeśli pracownik został zatrudniony przed 1997 rokiem nie wyświetlaj tej krotki.
                Zestawienie posortuj po nazwisku pracownika w kolejności rosnącej alfabetycznie.
            </h4>', 420, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$a3c73478.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:18:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from tasks where id>300 and id<400; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:19:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from tasks where id>300; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:19:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
delete from answers where id>300 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:19:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (301, 'select nazwisko, placa from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (301, 3, 1, 'Podaj nazwiska pracowników i ich płace.', 301, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (302, 'select nazwisko, placa/25 from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (302, 3, 2, 'Podaj nazwiska i wartość dniówek pracowników.', 302, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (303, 'select nazwisko, placa/25 as dniówka from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (303, 3, 3, 'Dodaj alias ''dniówka'' do poprzedniego zapytania.', 303, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (304, 'select nazwisko, placa*12 from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (304, 3, 4, 'Podaj nazwiska i roczną płacę pracowników.', 304, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (305, 'select nazwisko, placa*12 as roczny_dochód from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (305, 3, 5, 'Dodaj alias ''roczny_dochód'' do poprzedniego zapytania.', 305, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:20:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (306, 'select min(placa) from test_pracownicy.pracownicy;', sysdate, sysdate);
insert into tasks values (306, 3, 6, 'Ile wynosi minimalna płaca w tabeli test_pracownicy.pracownicy?', 306, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (307, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from test_pracownicy.pracownicy);', sysdate, sysdate);
insert into tasks values (307, 3, 7, 'Podaj nazwisko, stanowisko i płacę pracownika, który zarabia najmniej.', 307, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (308, 'select nazwisko, stanowisko, placa
from test_pracownicy.pracownicy
where placa<(select avg(placa) from pracownicy);', sysdate, sysdate);
insert into tasks values (308, 3, 8, 'Podaj nazwiska, stanowiska i płace pracowników, którzy zarabiają poniżej średniej w firmie.', 308, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (309, 'select id_dzialu, COUNT(*) as liczba_pracowników
from test_pracownicy.pracownicy
group by id_dzialu
order by liczba_pracowników;', sysdate, sysdate);
insert into tasks values (309, 3, 9, 'Podaj ilu pracowników pracuje w każdym dziale.', 309, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (310, 'select p.nazwisko||'' pracuje w dziale: ''||d.nazwa as wyniki from test_pracownicy.pracownicy p inner join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);
insert into tasks values (310, 3, 10, 'Wypisz w postaci jednego łańcucha nazwisko pracownika i w jakim pracuje dziale.', 310, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:20:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (311, 'select id_dzialu, stanowisko, COUNT(*) as liczba_etatów
from test_pracownicy.pracownicy
group by id_dzialu, stanowisko;', sysdate, sysdate);
insert into tasks values (311, 3, 11, 'Ilu pracowników zatrudnia każdy dział, na każdym etacie?', 311, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (312, 'select p.nazwisko, d.nazwa, p.placa, s.placa_min, s.placa_max from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko where s.placa_min>1500 and s.placa_max<3500;', sysdate, sysdate);
insert into tasks values (312, 3, 12, 'Podaj nazwiska, nazwę działu, płacę, oraz minimalną i maksymalną płacę, jaką może zarobić pracownik
   na swoim stanowisku, jednakże tylko dla tych stanowisk, dla których płaca minimalna jest większa niż
   1500PLN, a płaca maksymalna mniejsza niż 3500PLN.', 312, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
   
insert into answers values (313, 'select p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(select max(p.placa) from test_pracownicy.pracownicy p where p.id_dzialu=30);', sysdate, sysdate);
insert into tasks values (313, 3, 13, 'Podaj nazwiska i płace pracowników, ktorzy zarabiają więcej niż którykolwiek pracownik z działu 30.', 313, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (314, 'select p.nazwisko, p.placa,
 (select avg(placa) from test_pracownicy.pracownicy) as średnia,
  (abs((select avg(placa) from test_pracownicy.pracownicy)-p.placa)) as różnica
from test_pracownicy.pracownicy p;', sysdate, sysdate);
insert into tasks values (314, 3, 14, 'Podaj nazwisko pracownika, jego płacę, oraz ile wynosi różnica między jego płacą a średnią płacą w firmie.', 314, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (315, 'select d.nazwa, avg(p.placa) as średnia from test_pracownicy.pracownicy p join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu group by d.nazwa;', sysdate, sysdate);
insert into tasks values (315, 3, 15, 'Wypisz nazwę działu i średnią płacę dla jego pracowników.', 315, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:20:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (316, 'select p.id_dzialu, p.nazwisko, p.placa
from test_pracownicy.pracownicy p
where p.placa>(
	select avg(t.placa) as średnia
	 from test_pracownicy.pracownicy t  
	  where p.id_dzialu=t.id_dzialu
	   group by t.id_dzialu
	   );', sysdate, sysdate);
insert into tasks values (316, 3, 16, 'Wypisz identyfikator działu, nazwisko i płacę pracowników, którzy zarabiają więcej niż wynosi średnia
   płaca w ich dziale.', 316, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (317, 'select p.nazwisko
from test_pracownicy.pracownicy p
where p.nr_akt in (select t.kierownik from test_pracownicy.pracownicy t where t.kierownik is not null);', sysdate, sysdate);
insert into tasks values (317, 3, 17, 'Podaj nazwiska szefów.', 317, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (318, 'select d.id_dzialu from test_pracownicy.dzialy d where not exists (select p.id_dzialu from test_pracownicy.pracownicy p where p.id_dzialu=d.id_dzialu);', sysdate, sysdate);
insert into tasks values (318, 3, 18, 'Podaj identyfikator i nazwę działu, który nie zatrudnia pracowników.', 318, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (401, 'SELECT ''SELECT * FROM '' || TABLE_SCHEMA ||''.''|| TABLE_NAME as script
FROM INFORMATION_SCHEMA.TABLES
where table_schema=''TEST_PRACOWNICY'';', sysdate, sysdate);
insert into tasks values (401, 4, 1, 'Przygotuj sobie skrypt, który pomoże ci w przyszłości odnajdywać informacje zawarte we wszystkich tabelach danego schematu. Aby uzyskać pełną liczbę punktów za to zadanie wyświetl wszystkie tabele schematu TEST_PRACOWNICY w poniższym formacie: select * from nazwa_schematu.nazwa_tabeli', 401, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (402, 'select p.nr_akt, d.nazwa, d.siedziba
from test_pracownicy.pracownicy p
natural join test_pracownicy.dzialy d;', sysdate, sysdate);
insert into tasks values (402, 4, 2, 'Podaj NR_AKT pracownika oraz nazwę działu i siedzibę działu. Jeśli pracownik nie ma działu nie wyświetlaj tego pracownika.', 402, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (403, 'select p1.nr_akt, p2.nazwisko
from test_pracownicy.pracownicy p1
join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt;', sysdate, sysdate);
insert into tasks values (403, 4, 3, 'Podaj NR_AKT pracownika oraz nazwisko kierownika. Jeśli pracownik nie ma kierownika nie wyświetlaj tego pracownika.', 403, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (404, 'select p1.nr_akt, d1.nazwa, p2.nazwisko, d2.nazwa
from test_pracownicy.pracownicy p1
join test_pracownicy.dzialy d1 on p1.id_dzialu=d1.id_dzialu
join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt
join test_pracownicy.dzialy d2 on p2.id_dzialu=d2.id_dzialu;', sysdate, sysdate);
insert into tasks values (404, 4, 4, 'Podaj NR_AKT pracownika, nazwę działu tego pracownika, nazwisko kierownika, nazwę działu tego kierownika. Jeśli pracownik nie ma kierownika nie wyświetlaj tego pracownika. Jeśli pracownik nie ma działu nie wyświetlaj tego pracownika.', 404, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (405, 'select p2.nazwisko
from test_pracownicy.pracownicy p1
join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt;', sysdate, sysdate);
insert into tasks values (405, 4, 5, '<h4>Podaj nazwiska pracowników, którzy są kierownikami.</h4>', 405, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:21:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (406, 'select p.nr_akt, d.nazwa, d.siedziba
from test_pracownicy.pracownicy p
left join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu;', sysdate, sysdate);
insert into tasks values (406, 4, 6, '<h4>Podaj NR_AKT pracownika oraz nazwę działu i siedzibę działu. W zestawieniu uwzględnij również pracowników, których dział nie istnieje lub nie jest podany.</h4>', 406, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (407, 'select p1.nr_akt, p2.nazwisko
from test_pracownicy.pracownicy p1
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt;', sysdate, sysdate);
insert into tasks values (407, 4, 7, '<h4>Podaj NR_AKT pracownika oraz nazwisko kierownika. W zestawieniu uwzględnij również pracowników, których kierownik nie istnieje lub nie jest podany.</h4>', 407, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (408, 'select p1.nr_akt, d1.nazwa, p2.nazwisko, d2.nazwa
from test_pracownicy.pracownicy p1
left join test_pracownicy.dzialy d1 on p1.id_dzialu=d1.id_dzialu
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt
left join test_pracownicy.dzialy d2 on p2.id_dzialu=d2.id_dzialu;', sysdate, sysdate);
insert into tasks values (408, 4, 8, '<h4>Podaj NR_AKT pracownika, nazwę działu tego pracownika, nazwisko kierownika, nazwę działu tego kierownika.
                W zestawieniu uwzględnij również pracowników, których kierownik nie istnieje lub nie jest podany.
                W zestawieniu uwzględnij również pracowników, których dział nie istnieje lub nie jest podany.
                W zestawieniu uwzględnij również kierowników, których dział nie istnieje lub nie jest podany.</h4>', 408, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (409, 'select p1.nr_akt, d1.nazwa, p2.nazwisko, d2.nazwa
from test_pracownicy.pracownicy p1
left join test_pracownicy.dzialy d1 on p1.id_dzialu=d1.id_dzialu
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt
join test_pracownicy.dzialy d2 on p2.id_dzialu=d2.id_dzialu;', sysdate, sysdate);
insert into tasks values (409, 4, 9, '<h4>Podaj NR_AKT pracownika, nazwę działu tego pracownika, nazwisko kierownika, nazwę działu tego kierownika.
                W zestawieniu uwzględnij również pracowników, których kierownik nie istnieje lub nie jest podany.
                W zestawieniu uwzględnij również pracowników, których dział nie istnieje lub nie jest podany.
                W zestawieniu <b>nie</b> uwzględniaj kierowników, których dział nie istnieje lub nie jest podany.</h4>', 409, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (410, 'select * from test_pracownicy.pracownicy p1
where nr_akt not in (
select kierownik from test_pracownicy.pracownicy p2 where kierownik is not null
);', sysdate, sysdate);
insert into tasks values (410, 4, 10, '<h4>Podaj nazwiska pracowników, którzy nie są kierownikami.</h4>', 410, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:21:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (411, 'select distinct p1.kierownik from test_pracownicy.pracownicy p1
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt
where p2.nr_akt is null
order by p1.kierownik;', sysdate, sysdate);
insert into tasks values (411, 4, 11, '<h4>Podaj nazwiska kierowników, którym nie podlega żaden pracownik.</h4>', 411, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (412, 'select nazwisko from test_pracownicy.pracownicy
union all
select nazwisko from test_pracownicy.prac_archiw;', sysdate, sysdate);
insert into tasks values (412, 4, 12, '<h4>Podaj nazwiska wszystkich pracowników aktualnie pracujących i tych którzy zostali zwolnieni.</h4>', 412, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (413, 'select nazwisko from test_pracownicy.pracownicy
union
select nazwisko from test_pracownicy.prac_archiw;', sysdate, sysdate);
insert into tasks values (413, 4, 13, '<h4>Podaj nazwiska wszystkich pracowników aktualnie pracujących i tych którzy zostali zwolnieni. Wyeliminuj powtórzenia.</h4>', 413, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (414, 'select p.nr_akt, p.stanowisko, s.placa_min, s.placa_max
from test_pracownicy.pracownicy p
left join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko
order by p.nr_akt, p.stanowisko;', sysdate, sysdate);
insert into tasks values (414, 4, 14, '<h4>Podaj NR_AKT pracownika, stanowisko, płacę minimalną i płace maksymalną dla danego stanowiska.</h4>', 414, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (415, 'select p.nazwisko, d.nazwa
from test_pracownicy.pracownicy p
right join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu
order by p.nazwisko, d.nazwa;', sysdate, sysdate);
insert into tasks values (415, 4, 15, '<h4>Podaj nazwiska pracowników i nazwę działu w których pracują. W zestawieniu uwzględnij również działy które, nie mają żadnego pracownika.</h4>', 415, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (416, 'select p.nazwisko, d.nazwa, d.siedziba from test_pracownicy.pracownicy p
left join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu and d.siedziba=''CZESTOCHOWA''
order by p.nazwisko, d.nazwa;', sysdate, sysdate);
insert into tasks values (416, 4, 16, '<h4>Podaj nazwiska wszystkich pracowników, a w kolumnie obok podaj nazwy i siedziby działów
                Nazwa działu ma się pojawić wtedy i tylko wtedy gdy siedziba jest w Częstochowie.</h4>
            <h5>*Uwaga na wielkość liter i polskie znaki w nazwie miejscowości.</h5>', 416, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (417, 'select p.nazwisko, d.nazwa, d.siedziba from test_pracownicy.pracownicy p
left join test_pracownicy.dzialy d on p.id_dzialu=d.id_dzialu and d.siedziba<>''CZESTOCHOWA''
order by p.nazwisko, d.nazwa;', sysdate, sysdate);
insert into tasks values (417, 4, 17, '<h4>Podaj nazwiska wszystkich pracowników, a w kolumnie obok podaj nazwy i siedziby działów
                Nazwa działu ma sie pojawić wtedy i tylko wtedy, gdy siedziba <b>NIE</b> jest w Częstochowie.</h4>
            <h5>*Uwaga na wielkość liter i polskie znaki w nazwie miejscowości.</h5>', 417, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (418, 'select nazwisko, s.placa_min, s.placa_max
from test_pracownicy.pracownicy p
left join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko and (p.placa+IFNULL(p.dod_funkcyjny, 0))<=s.placa_max
order by nazwisko, s.placa_min;', sysdate, sysdate);
insert into tasks values (418, 4, 18, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj ich minimalną i maksymalną płacę.
                Wartości płac mają się pojawić wtedy i tylko wtedy gdy płaca + dodatek funkcyjny nie przekracza
                maksymalnej wartości zarobków dla tego stanowiska.</h4>', 418, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (419, 'select nazwisko, s.placa_min, s.placa_max
from test_pracownicy.pracownicy p
left join test_pracownicy.stanowiska s on p.stanowisko=s.stanowisko and (p.placa+IFNULL(p.dod_funkcyjny, 0))<=s.placa_max
where p.prowizja is null
order by nazwisko, s.placa_min;', sysdate, sysdate);
insert into tasks values (419, 4, 19, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj ich minimalną i maksymalną płacę.
                Płaca ma się pojawić wtedy i tylko wtedy gdy płaca + dodatek funkcyjny nie przekracza maksymlanej
                wartości zarobków dla tego stanowiska.
                W zestawieniu uwzględnij tylko nazwiska osób, które nie pobierają prowizji.
                Jeśli ktoś dostaje prowizję nie wyświetlaj nawet jego nazwiska.</h4>', 419, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (420, 'select p1.nazwisko, p2.nazwisko as kierownik
from test_pracownicy.pracownicy p1
left join test_pracownicy.pracownicy p2 on p1.kierownik=p2.nr_akt and p2.data_zatr<DATE ''1990-01-01''
where p1.data_zatr<DATE ''1997-01-01''
order by nazwisko;', sysdate, sysdate);
insert into tasks values (420, 4, 20, '<h4>Podaj nazwiska wszystkich pracowników i w kolumnie obok podaj nazwisko kierownika.
                Płaca ma się pojawić wtedy i tylko wtedy gdy kierownik został zatrudniony przed 1990 rokiem.
                W zestawieniu uwzględnij tylko pracowników, którzy zostali zatrudnieni przed 1997 rokiem.
                Jeśli pracownik został zatrudniony przed 1997 rokiem nie wyświetlaj tej krotki.
                Zestawienie posortuj po nazwisku pracownika w kolejności rosnącej alfabetycznie.
            </h4>', 420, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:21:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (501, 'select * from countries;', sysdate, sysdate);
insert into tasks values (501, 5, 1, '', 501, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (502, 'select * from departments where rownum<=10;', sysdate, sysdate);
insert into tasks values (502, 5, 2, '', 502, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (503, 'select * from employees
order by manager_id asc nulls last;', sysdate, sysdate);
insert into tasks values (503, 5, 3, '', 503, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (504, 'select * from job_history h
order by department_id asc, start_date desc;', sysdate, sysdate);
insert into tasks values (504, 5, 4, '', 504, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (505, 'select * from jobs
order by (IFNULL(max_salary, 0))-(IFNULL(min_salary, 0)) asc;', sysdate, sysdate);
insert into tasks values (505, 5, 5, '', 505, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (506, 'select * from locations
where lower(street_address) like ''%st%'';', sysdate, sysdate);
insert into tasks values (506, 5, 6, '', 506, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (507, 'select * from regions
order by length(region_name) asc;', sysdate, sysdate);
insert into tasks values (507, 5, 7, '', 507, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (508, 'select last_name, job_id, hire_date
from employees
where last_name in (''Matos'', ''Taylor'')
order by last_name asc;', sysdate, sysdate);
insert into tasks values (508, 5, 8, '', 508, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (509, 'select last_name,	 hire_date, 
	 dateadd(week, datediff(week, ''1900-01-01'', dateadd(m, 6, hire_date)), ''1900-01-08'') as kiedy
from employees;', sysdate, sysdate);
insert into tasks values (509, 5, 9, '', 509, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (510, 'select last_name, job_id, e.department_id, department_name
from employees e
join departments d on e.department_id=d.department_id
join locations l on d.location_id=l.location_id
where l.city=''Toronto''
order by last_name, job_id;', sysdate, sysdate);
insert into tasks values (510, 5, 10, '', 510, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:21:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (511, 'select e1.last_name as nazwisko, e1.department_id as odział, e2.last_name as kolega
from employees e1
join employees e2 on e1.department_id=e2.department_id
where e1.last_name<>e2.last_name
order by odział asc, nazwisko asc;', sysdate, sysdate);
insert into tasks values (511, 5, 11, '', 511, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (512, 'select first_name, last_name
from employees
where manager_id in (select employee_id from employees where last_name=''King'')
order by first_name, last_name;', sysdate, sysdate);
insert into tasks values (512, 5, 12, '', 512, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (513, 'select last_name, salary, commission_pct
from employees
where commission_pct is not null;', sysdate, sysdate);
insert into tasks values (513, 5, 13, '', 513, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (514, 'select first_name ||' '|| last_name as pracownicy
from employees
where last_name like ''__a%'';', sysdate, sysdate);
insert into tasks values (514, 5, 14, '', 514, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (515, 'select first_name, last_name, e.department_id, job_id
from employees e
join departments d on e.department_id=d.department_id
join locations l on d.location_id=l.location_id
where l.city=''Seattle''
order by first_name, last_name;', sysdate, sysdate);
insert into tasks values (515, 5, 15, '', 515, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (516, 'select distinct department_id, salary
	from employees
	where department_id= (select department_id
	from (select department_id, avg(salary) as srednia
	from employees
	group by department_id) szwg
	where szwg.srednia = (select max(srednia) from (select department_id, avg(salary) as srednia
	from employees
	group by department_id)
	))
	and salary = (select min(salary)
	from employees
	where department_id= (select department_id
	from (select department_id, avg(salary) as srednia
	from employees
	group by department_id) szwg
	where szwg.srednia = (select max(srednia) from (select department_id, avg(salary) as srednia
	from employees
	group by department_id)
	)));', sysdate, sysdate);
insert into tasks values (516, 5, 16, '', 516, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (517, 'select DAY_OF_WEEK(hire_date) as dzien_t, count(*) as count
	from employees
	group by DAY_OF_WEEK(hire_date);', sysdate, sysdate);
insert into tasks values (517, 5, 17, '', 517, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (518, 'select DAY_OF_WEEK(hire_date) as dzien_t
	from employees
	group by DAY_OF_WEEK(hire_date)
	having count(*) = (select max(count) from (
	select DAY_OF_WEEK(hire_date) as dzien_t, count(*) as count
	from employees
	group by DAY_OF_WEEK(hire_date)
	));', sysdate, sysdate);
insert into tasks values (518, 5, 18, '', 518, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (519, 'select first_name, last_name, hire_date
from employees
where DAY_OF_WEEK(hire_date) = (select DAY_OF_WEEK(hire_date) as dzien_t
	from employees
	group by DAY_OF_WEEK(hire_date)
	having count(*) = (select max(count) from (
	select DAY_OF_WEEK(hire_date) as dzien_t, count(*) as count
	from employees
	group by DAY_OF_WEEK(hire_date)
	)));', sysdate, sysdate);
insert into tasks values (519, 5, 19, '', 519, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (520, 'select top 3 first_name, last_name, salary
from employees
order by salary desc;', sysdate, sysdate);
insert into tasks values (520, 5, 20, '', 520, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:21:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "

INSERT INTO ANSWERS VALUES (514, 'select first_name ||' '|| last_name as pracownicy
from employees
where last_name like ''__a%'';'[*], SYSDATE, SYSDATE);
INSERT INTO TASKS VALUES (514, 5, 14, '', 514, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

INSERT INTO ANSWERS VALUES (515, 'select first_name, last_name, e.department_id, job_id
from employees e
join departments d on e.department_id=d.department_id
join locations l on d.location_id=l.location_id
where l.city=''Seattle''
order by first_name, last_name;', SYSDATE, SYSDATE);
INSERT INTO TASKS VALUES (515, 5, 15, '', 515, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

INSERT INTO ANSWERS VALUES (516, 'select distinct department_id, salary
	from employees
	where department_id= (select department_id
	from (select department_id, avg(salary) as srednia
	from employees
	group by department_id) szwg
	where szwg.srednia = (select max(srednia) from (select department_id, avg(salary) as srednia
	from employees
	group by department_id)
	))
	and salary = (select min(salary)
	from employees
	where department_id= (select department_id
	from (select department_id, avg(salary) as srednia
	from employees
	group by department_id) szwg
	where szwg.srednia = (select max(srednia) from (select department_id, avg(salary) as srednia
	from employees
	group by department_id)
	)));', SYSDATE, SYSDATE);
INSERT INTO TASKS VALUES (516, 5, 16, '', 516, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

INSERT INTO ANSWERS VALUES (517, 'select DAY_OF_WEEK(hire_date) as dzien_t, count(*) as count
	from employees
	group by DAY_OF_WEEK(hire_date);', SYSDATE, SYSDATE);
INSERT INTO TASKS VALUES (517, 5, 17, '', 517, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

INSERT INTO ANSWERS VALUES (518, 'select DAY_OF_WEEK(hire_date) as dzien_t
	from employees
	group by DAY_OF_WEEK(hire_date)
	having count(*) = (select max(count) from (
	select DAY_OF_WEEK(hire_date) as dzien_t, count(*) as count
	from employees
	group by DAY_OF_WEEK(hire_date)
	));', SYSDATE, SYSDATE);
INSERT INTO TASKS VALUES (518, 5, 18, '', 518, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

INSERT INTO ANSWERS VALUES (519, 'select first_name, last_name, hire_date
from employees
where DAY_OF_WEEK(hire_date) = (select DAY_OF_WEEK(hire_date) as dzien_t
	from employees
	group by DAY_OF_WEEK(hire_date)
	having count(*) = (select max(count) from (
	select DAY_OF_WEEK(hire_date) as dzien_t, count(*) as count
	from employees
	group by DAY_OF_WEEK(hire_date)
	)));', SYSDATE, SYSDATE);
INSERT INTO TASKS VALUES (519, 5, 19, '', 519, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

INSERT INTO ANSWERS VALUES (520, 'select top 3 first_name, last_name, salary
from employees
order by salary desc;', SYSDATE, SYSDATE);
INSERT INTO TASKS VALUES (520, 5, 20, '', 520, 'QUERY', 'Łukasz Ochmański', SYSDATE, SYSDATE, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
 "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:


insert into answers values (514, 'select first_name ||' '|| last_name as pracownicy
from employees
where last_name like ''__a%'';', sysdate, sysdate);
insert into tasks values (514, 5, 14, '', 514, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (515, 'select first_name, last_name, e.department_id, job_id
from employees e
join departments d on e.department_id=d.department_id
join locations l on d.location_id=l.location_id
where l.city=''Seattle''
order by first_name, last_name;', sysdate, sysdate);
insert into tasks values (515, 5, 15, '', 515, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (516, 'select distinct department_id, salary
	from employees
	where department_id= (select department_id
	from (select department_id, avg(salary) as srednia
	from employees
	group by department_id) szwg
	where szwg.srednia = (select max(srednia) from (select department_id, avg(salary) as srednia
	from employees
	group by department_id)
	))
	and salary = (select min(salary)
	from employees
	where department_id= (select department_id
	from (select department_id, avg(salary) as srednia
	from employees
	group by department_id) szwg
	where szwg.srednia = (select max(srednia) from (select department_id, avg(salary) as srednia
	from employees
	group by department_id)
	)));', sysdate, sysdate);
insert into tasks values (516, 5, 16, '', 516, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (517, 'select DAY_OF_WEEK(hire_date) as dzien_t, count(*) as count
	from employees
	group by DAY_OF_WEEK(hire_date);', sysdate, sysdate);
insert into tasks values (517, 5, 17, '', 517, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (518, 'select DAY_OF_WEEK(hire_date) as dzien_t
	from employees
	group by DAY_OF_WEEK(hire_date)
	having count(*) = (select max(count) from (
	select DAY_OF_WEEK(hire_date) as dzien_t, count(*) as count
	from employees
	group by DAY_OF_WEEK(hire_date)
	));', sysdate, sysdate);
insert into tasks values (518, 5, 18, '', 518, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (519, 'select first_name, last_name, hire_date
from employees
where DAY_OF_WEEK(hire_date) = (select DAY_OF_WEEK(hire_date) as dzien_t
	from employees
	group by DAY_OF_WEEK(hire_date)
	having count(*) = (select max(count) from (
	select DAY_OF_WEEK(hire_date) as dzien_t, count(*) as count
	from employees
	group by DAY_OF_WEEK(hire_date)
	)));', sysdate, sysdate);
insert into tasks values (519, 5, 19, '', 519, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (520, 'select top 3 first_name, last_name, salary
from employees
order by salary desc;', sysdate, sysdate);
insert into tasks values (520, 5, 20, '', 520, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
 [42001-182]
03-14 00:22:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (511, 'select e1.last_name as nazwisko, e1.department_id as odział, e2.last_name as kolega
from employees e1
join employees e2 on e1.department_id=e2.department_id
where e1.last_name<>e2.last_name
order by odział asc, nazwisko asc;', sysdate, sysdate);
insert into tasks values (511, 5, 11, '', 511, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)'); [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:23:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
insert into answers values (514, 'select first_name ||'' ''|| last_name as pracownicy
from employees
where last_name like ''__a%'';', sysdate, sysdate);
insert into tasks values (514, 5, 14, '', 514, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (515, 'select first_name, last_name, e.department_id, job_id
from employees e
join departments d on e.department_id=d.department_id
join locations l on d.location_id=l.location_id
where l.city=''Seattle''
order by first_name, last_name;', sysdate, sysdate);
insert into tasks values (515, 5, 15, '', 515, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (516, 'select distinct department_id, salary
	from employees
	where department_id= (select department_id
	from (select department_id, avg(salary) as srednia
	from employees
	group by department_id) szwg
	where szwg.srednia = (select max(srednia) from (select department_id, avg(salary) as srednia
	from employees
	group by department_id)
	))
	and salary = (select min(salary)
	from employees
	where department_id= (select department_id
	from (select department_id, avg(salary) as srednia
	from employees
	group by department_id) szwg
	where szwg.srednia = (select max(srednia) from (select department_id, avg(salary) as srednia
	from employees
	group by department_id)
	)));', sysdate, sysdate);
insert into tasks values (516, 5, 16, '', 516, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (517, 'select DAY_OF_WEEK(hire_date) as dzien_t, count(*) as count
	from employees
	group by DAY_OF_WEEK(hire_date);', sysdate, sysdate);
insert into tasks values (517, 5, 17, '', 517, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (518, 'select DAY_OF_WEEK(hire_date) as dzien_t
	from employees
	group by DAY_OF_WEEK(hire_date)
	having count(*) = (select max(count) from (
	select DAY_OF_WEEK(hire_date) as dzien_t, count(*) as count
	from employees
	group by DAY_OF_WEEK(hire_date)
	));', sysdate, sysdate);
insert into tasks values (518, 5, 18, '', 518, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (519, 'select first_name, last_name, hire_date
from employees
where DAY_OF_WEEK(hire_date) = (select DAY_OF_WEEK(hire_date) as dzien_t
	from employees
	group by DAY_OF_WEEK(hire_date)
	having count(*) = (select max(count) from (
	select DAY_OF_WEEK(hire_date) as dzien_t, count(*) as count
	from employees
	group by DAY_OF_WEEK(hire_date)
	)));', sysdate, sysdate);
insert into tasks values (519, 5, 19, '', 519, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (520, 'select top 3 first_name, last_name, salary
from employees
order by salary desc;', sysdate, sysdate);
insert into tasks values (520, 5, 20, '', 520, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:23:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:

insert into answers values (601, 'select e.first_name, e.last_name, city, job_title, salary
from employees e
join departments d on e.department_id=d.department_id
join locations l on d.location_id=l.location_id
join jobs j on e.job_id=j.job_id
where city=''Toronto''
order by e.first_name, e.last_name;', sysdate, sysdate);
insert into tasks values (601, 6, 1, '', 601, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (602, 'select count(*)
from employees
where last_name like ''%n'';', sysdate, sysdate);
insert into tasks values (602, 6, 2, '', 602, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (603, 'select department_name, city, (select count(*) from employees e where e.department_id=d.department_id) as liczba_pracownikow
from departments d
join locations l on d.location_id=l.location_id
order by department_name asc;', sysdate, sysdate);
insert into tasks values (603, 6, 3, '', 603, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (604, 'select first_name, last_name, e.email, e.hire_date as zatrudniony
from employees e
where extract(DD from hire_date)<16
order by first_name, last_name;', sysdate, sysdate);
insert into tasks values (604, 6, 4, '', 604, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (605, 'select distinct e.department_id, department_name, city
from employees e
join departments d on e.department_id=d.department_id
join locations l on d.location_id=l.location_id
where d.department_id not in (select distinct e2.department_id
                 from employees e2
                 join departments d2 on e2.department_id=d2.department_id
	where e2.job_id=''SA_REP'' and e2.department_id is not null)
order by department_id;', sysdate, sysdate);
insert into tasks values (605, 6, 5, '', 605, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (606, 'select s.department_id, d.department_name, s.tcount as liczba_pracownikow from (
                 select department_id, count(*) as tcount
	from employees
	group by department_id
) s
join departments d on s.department_id=d.department_id
where s.tcount = (select max(tcount) from (                 select department_id, count(*) as tcount
	from employees
	group by department_id))
order by s.department_id;', sysdate, sysdate);
insert into tasks values (606, 6, 6, '', 606, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (607, 'select * from (
select d2.department_id, d2.department_name, (select count(*) from employees e2 where e2.department_id=d2.department_id) as count
from departments d2
)
where count = (select min(count) from (                 
select (select count(*) from employees e3 where e3.department_id=d3.department_id) as count
from departments d3
))
order by department_id;', sysdate, sysdate);
insert into tasks values (607, 6, 7, '', 607, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (608, 'select s.department_id, d.department_name, s.tcount as liczba_pracownikow from (
                 select department_id, count(*) as tcount
	from employees
	group by department_id
) s
left join departments d on s.department_id=d.department_id
where s.tcount = (select min(tcount) from (                 select department_id, count(*) as tcount
	from employees
	group by department_id))
	order by department_id;', sysdate, sysdate);
insert into tasks values (608, 6, 8, '', 608, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (609, 'select * from (
select d2.department_id, d2.department_name, (select count(*) from employees e2 where e2.department_id=d2.department_id) as count
from departments d2) s
where s.count < 3
order by department_id;', sysdate, sysdate);
insert into tasks values (609, 6, 9, '', 609, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (610, 'select EXTRACT(YEAR from hire_date) as rok, count(*) as liczba_pracownikow
from employees
where EXTRACT(YEAR from hire_date)<=EXTRACT(YEAR from DATE ''2002-01-01'')
and EXTRACT(YEAR from hire_date)>=EXTRACT(YEAR from DATE ''1990-01-01'')
group by EXTRACT(YEAR from hire_date);', sysdate, sysdate);
insert into tasks values (610, 6, 10, '', 610, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (611, 'select country_name, count(*) as liczba_lokalizacji
from locations l
join countries c on l.country_id=c.country_id
group by country_name
order by country_name;', sysdate, sysdate);
insert into tasks values (611, 6, 11, '', 611, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (612, 'select first_name, last_name, d.department_id, EXTRACT(MONTH from hire_date) as miesiac
from employees e
left join departments d on e.department_id=d.department_id
order by first_name, last_name;', sysdate, sysdate);
insert into tasks values (612, 6, 12, '', 612, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (613, 'select EXTRACT(MONTH from e1.hire_date) as miesiąc, count(*)
from employees e1
group by EXTRACT(MONTH from e1.hire_date)
order by EXTRACT(MONTH from e1.hire_date);', sysdate, sysdate);
insert into tasks values (613, 6, 13, '', 613, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (614, 'select EXTRACT(YEAR from e1.hire_date) as rok, EXTRACT(MONTH from e1.hire_date) as miesiac, count(*) as liczba_zatrudnionych
from employees e1
group by EXTRACT(YEAR from e1.hire_date), EXTRACT(MONTH from e1.hire_date)
order by EXTRACT(YEAR from e1.hire_date), EXTRACT(MONTH from e1.hire_date);', sysdate, sysdate);
insert into tasks values (614, 6, 14, '', 614, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (615, 'select EXTRACT(YEAR from e1.hire_date) as rok, EXTRACT(MONTH from e1.hire_date) as miesiac, d1.department_name, count(*) as liczba_zatrudnionych
from employees e1
left join departments d1 on e1.department_id=d1.department_id
group by EXTRACT(YEAR from e1.hire_date), EXTRACT(MONTH from e1.hire_date), e1.department_id
order by EXTRACT(YEAR from e1.hire_date), EXTRACT(MONTH from e1.hire_date), e1.department_id;', sysdate, sysdate);
insert into tasks values (615, 6, 15, '', 615, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (616, 'select salary as x, count(*) as y
from employees
group by salary
order by salary asc;', sysdate, sysdate);
insert into tasks values (616, 6, 16, '', 616, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (617, null, sysdate, sysdate);
insert into tasks values (617, 6, 17, '', 617, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (618, null, sysdate, sysdate);
insert into tasks values (618, 6, 18, '', 618, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (619, null, sysdate, sysdate);
insert into tasks values (619, 6, 19, '', 619, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');

insert into answers values (620, null, sysdate, sysdate);
insert into tasks values (620, 6, 20, '', 620, 'QUERY', 'Łukasz Ochmański', sysdate, sysdate, '1.0.0', 'H2', '1.4.182 (2014-10-17)');
 [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.CommandList.query(CommandList.java:49)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
03-14 00:23:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
update tasks set question=null where question=''; [90002-182]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.Prepared.query(Prepared.java:212)
	at org.h2.command.CommandContainer.query(CommandContainer.java:90)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:79)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:455)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:405)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:471)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:481)
	at pl.lodz.p.h2.DatabaseAdmImpl.executeQuery(DatabaseAdmImpl.java:68)
	at pl.lodz.p.components.service.DbService.select(DbService.java:46)
	at pl.lodz.p.components.service.DbService$$FastClassBySpringCGLIB$$e23da067.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:267)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at pl.lodz.p.components.service.AdmStudentService$$EnhancerBySpringCGLIB$$6bed9da4.select(<generated>)
	at pl.lodz.p.components.contoller.TaskController.executeQuery(TaskController.java:59)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:185)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:104)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMatch(AbstractMethodMessageHandler.java:452)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:448)
	at org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.handleMatch(SimpAnnotationMethodMessageHandler.java:83)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessageInternal(AbstractMethodMessageHandler.java:413)
	at org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler.handleMessage(AbstractMethodMessageHandler.java:351)
	at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:135)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
